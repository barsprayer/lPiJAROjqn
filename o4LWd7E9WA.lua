-- This file was generated using Luraph Obfuscator v13.5.9

return(function(f_,b_,g_,i_,K_,O_,T_,Q_,n_,D_,J_,H_,z_,Y_,F_,c_,s_,p_,Z_,m_,V_,t_,r_,A_,I_,C_,h_,q_,N_,u_,R_,y_,X_,S_,e_,W_,P,...)local M,U,d,B,a,Q=select,nil,nil,nil,nil,nil;for YZ=0x000,4 do if YZ<=1 then if YZ==0 then U=Q_;else d=y_;end;else if not(YZ<=0X00002)then if YZ~=0X03 then Q=e_;else a=O_;end;else B=W_;end;end;end;local O=table.insert;local u=(rawget);local y=(u_);local t,D,v,x,r=K_,getfenv,nil,nil,nil;for UR=0X0,2 do if UR<=0 then v=t_;else do if UR~=1 then r=coroutine.wrap;else do x=r_;end;end;end;end;end;local G=h_;local e=(setmetatable);local l_,h,m=0X1,nil,nil;repeat do if l_~=0X0000 then h=H_;l_=0X00;else m=1;l_=2;end;end;until l_>=0x002;local o=(b_);local A=(D and D()or _ENV);local G_=({});l_=0Xc;local K,p,f,Y,V,g,S,q,Z,C,v_,X=nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,(nil);while l_~=13 do if l_<=5 then do if l_<=2 then do if not(l_<=0)then if l_==0X1 then l_=8;else do pend;l_=0X1;end;else v_={};do l_=0x00003;end;end;end;else if not(l_<=3)then if l_==0X4 then do p=y(x(p,5),"..",function(vz)if a(vz,2)==72 then local gb=0x0000;repeat if gb==0x00000 then f=B(x(vz,0X1,0X1));gb=1;else return"";end;until(false);else local oj=(nil);for J6=0X000,1 do if J6==0X00 then oj=o(B(vz,0X00010));else if f then local yJ=(Q(oj,f));f=A_;return yJ;else return oj;end;end;end;end;end);end;l_=10;else S=2147483648;l_=7;end;else do X=C-0x00001;end;l_=13;end;end;end;else if l_<=8 then if l_<=0X6 then g={[0]={[0X0]=0X00,0X00001,2,3,0X04,0X0005,6,0X7,8,0X9,10,11,0Xc,0XD,m_,15},{[p_]=1,0,3,2,5,4,0X07,0X6,9,f_,11,0X000A,13,12,0Xf,14},{[0X0]=2,0X03,0,1,0X6,V_,0X004,0X5,0XA,0XB,8,9,14,15,0xC,13},{[0X00]=3,2,1,0,0X007,6,5,0X004,11,10,0X9,0X00008,0X000F,0Xe,0xd,12},{[p_]=4,5,6,V_,0,0X0001,0X2,0X3,0XC,13,0XE,15,0X8,9,0XA,11},{[0X0]=5,q_,0X7,6,0x1,0,0X3,2,0X000D,0X0c,0XF,0xE,0X9,8,0Xb,0xA},{[0]=0x00006,7,4,5,2,3,0X000,S_,0xe,0X00F,12,0xd,0Xa,0XB,0x8,C_},{[0X00]=7,0X0006,0X005,4,3,0x002,1,0,0XF,0XE,13,12,11,0XA,0X00009,0x08},{[0]=8,C_,Z_,11,12,13,14,15,0X0,S_,0X2,0x3,0X0004,5,0X6,7},{[p_]=0x9,f_,11,10,0Xd,X_,0Xf,m_,0X1,0X0,3,2,0X5,0X04,7,6},{[0x0]=10,0XB,0X8,0X9,m_,15,12,13,2,0X03,p_,1,6,0x7,0x4,0X5},{[0x0]=11,0X0000a,9,8,0Xf,0Xe,z_,0X0C,0X03,0x00002,1,0X00,0x7,0x6,Y_,4},{[0x00]=0XC,z_,0X000e,0xF,0X008,0X00009,0x000a,0x000b,0x0004,0X5,6,7,0X000,0X1,2,3},{[0X0]=13,0x00C,0Xf,0Xe,C_,f_,11,10,0X00005,4,0X007,6,0X1,0,3,2},{[0]=0Xe,0X0f,X_,13,Z_,0XB,0X8,C_,0X006,0x7,q_,5,0x2,0X0003,0,1},{[0]=15,0Xe,0Xd,0XC,11,10,0X0009,8,V_,6,0X005,0X4,3,2,0X1,0x000}};do l_=0X5;end;else if l_~=0x0007 then Y={[0X0]=0X1};l_=0X4;else q=function()local is=1;local Js,Ls,bs,Zs=nil,nil,nil,nil;while(true)do if is<=0X00000 then do m=m+0X004;end;is=0X2;else if is==0X1 then Js,Ls,bs,Zs=a(p,m,m+c_);is=0X0;else return Zs*0X1000000+bs*0X10000+Ls*0X000100+Js;end;end;end;end;l_=0xb;end;end;else if not(l_<=0XA)then do if l_==0Xb then Z=0x2^52;l_=9;else K=D_;l_=2;end;end;else if l_~=0X0009 then do V=function()local Gt=(a(p,m,m));m=m+0x1;return Gt;end;end;do l_=0X6;end;else do C=0X100000000;end;l_=0;end;end;end;end;end;local z=(S-0x01);local W,b=i_.match,(setfenv);do local lT=nil;local OT=(1);do repeat if OT==0 then do for MU=1,31 do local cU=(0);do while cU<=0x1 do if cU==0X00000 then(Y)[MU]=lT;cU=0X001;else do lT=lT*0X2;end;cU=0X00002;end;end;end;end;end;break;else do lT=0x2;end;do OT=0X0;end;end;until false;end;end;local E=({0X6,7,4});l_=0X1;local i,c=nil,(nil);repeat if l_==0 then c=function(Bb,Jb,Kb)local fb=(nil);local Cb=(0X00001);while-1820998212 do if not(Cb<=0X0)then do if Cb==0X1 then fb=(Bb/Y[Jb])%Y[Kb];Cb=0X000;else return fb;end;end;else do fb=fb-fb%1;end;Cb=0X2;end;end;end;l_=2;else i=function()local GL,fL=q(),q();do if not(fL>=S)then else fL=fL-C;end;end;do return fL*C+GL;end;end;l_=0;end;until l_>=2;local R=function()local PJ,HJ,cJ,vJ,yJ,dJ,wJ=7,nil,nil,nil,nil,nil,(nil);while 0.3506114481173276 do if not(PJ<=0x003)then if PJ<=5 then if PJ==4 then wJ=1;PJ=8;else yJ=c(cJ,20,11);PJ=0X0;end;else if not(PJ<=6)then if PJ~=0X7 then if yJ==0X0 then do if dJ~=0X00 then local OF=(0X00000);do repeat if OF==0X0 then yJ=0X1;OF=0X1;else wJ=0x00;break;end;until(false);end;else return vJ*p_;end;end;else if yJ==0X0007FF then if dJ~=0 then return vJ*(1/0);else return vJ*(0/0);end;end;end;PJ=0X06;else HJ=q();PJ=1;end;else return vJ*(0X00002^(yJ-0X3FF))*(dJ/Z+wJ);end;end;else if not(PJ<=0X0001)then if PJ~=0X00002 then vJ=(-1)^c(cJ,31,0x1);PJ=5;else if not(HJ==0 and cJ==0)then else return 0x0;end;PJ=3;end;else if PJ~=0 then cJ=q();PJ=2;else dJ=c(cJ,0,0X0014)*C+HJ;PJ=0X4;end;end;end;end;end;local F=(bit or R_);local H=unpack or g_.unpack;local T=F and F.bxor or function(Hx,ex)Hx=Hx%C;local Sx=(0X0);ex=ex%C;local wx=(0X0);local yx=(1);repeat if wx==0 then do while Hx>0X0 and ex>0x0 do local oI,wI=nil,nil;local LI=3;repeat if not(LI<=0X2)then if LI<=0X3 then do oI=Hx%0X10;end;LI=0;else if LI~=0x04 then Hx=(Hx-oI)/0x10;LI=2;else Sx=Sx+g[oI][wI]*yx;LI=0X05;end;end;else do if not(LI<=0X0)then if LI~=0X1 then ex=(ex-wI)/0X10;LI=0x1;else yx=yx*16;break;end;else do wI=ex%0X10;end;do LI=0X00004;end;end;end;end;until false;end;end;do wx=0X1;end;else do return Sx+Hx*yx+ex*yx;end;end;until false;end;local N=F and F.band or function(fF,hF)do for Lg=0X0000,0X002 do do if not(Lg<=0x0)then if Lg==1 then hF=hF%C;else return((fF+hF)-T(fF,hF))/2;end;else do fF=fF%C;end;end;end;end;end;end;local J=(F and F.bor or function(jL,kL)jL=jL%C;kL=kL%C;do return X-N(X-jL,X-kL);end;end);local s=(F and F.bnot or function(RK)return X-(RK%C);end);l_=5;local I,l,L,k=nil,nil,nil,nil;repeat if not(l_<=2)then if l_<=3 then k={[0X1]=2,[0]=0,[2]=0X0,[0x3]=3,[0X6]=0X2,[5]=1,[0x00000]=0x05,[2]=1,[9]=0x9,[0x7]=3,[4]=0X1};do l_=6;end;else do if l_~=0X4 then I=F and F.lshift;do l_=4;end;else l=F and F.rshift;l_=0;end;end;end;else if not(l_<=0X0)then if l_~=0x1 then L=function()local lu=0X00000;local iu=0x0;repeat local KB=(a(p,m,m));m=m+0x1;lu=J(lu,I(N(KB,127),iu));if N(KB,0x0080)==0X0 then return lu;end;iu=iu+0X7;until false;end;do l_=0X3;end;else l=l or function(FP,dP)local yP=(nil);local cP=(2);while true do if cP<=0X00001 then if cP==0X0 then do return yP-yP%0x01;end;else yP=(FP%C/Y[dP]);cP=0x0;end;elseif cP~=2 then do if not(dP<0x0000)then else return I(FP,-dP);end;end;cP=0x1;else if dP>=0x20 then return 0X000;end;do cP=3;end;end;end;end;l_=0X2;end;else I=I or function(c1,F1)local S1=(1);do while true do do if S1<=0 then do if not(F1<p_)then else return l(c1,-F1);end;end;S1=2;else if S1==0x1 then if not(F1>=F_)then else return 0;end;do S1=0x00000;end;else do return(c1*Y[F1])%C;end;end;end;end;end;end;end;l_=0X1;end;end;until l_==6;local j=(function()local Jk=nil;for Fm=0X0,0X0002 do if Fm<=0X0000 then Jk=L();else if Fm~=1 then return Jk;else if not(Jk>z)then else do return Jk-C;end;end;end;end;end;end);local P_=V();local w_=(V());local M_=(function(J7)local b7={a(p,m,m+3)};local g7=T(b7[1],w_);local B7=(T(b7[0X02],w_));local f7,a7=nil,nil;for Ci=0,0x4 do if Ci<=0X0001 then do if Ci==0x000 then f7=T(b7[3],w_);else do a7=T(b7[4],w_);end;end;end;else if Ci<=0X00002 then w_=(0x51*w_+J7)%0X00100;else if Ci==0x3 then do m=m+0X4;end;else return a7*n_+f7*65536+B7*0X0000100+g7;end;end;end;end;end);l_=0X0001;local U_,d_=nil,(nil);while l_<=0X1 do if l_==0 then d_=0x1;l_=0X2;else do U_=function(...)do return M('\035',...),{...};end;end;end;do l_=0;end;end;end;l_=1;local B_,x_,a_,o_=nil,nil,nil,nil;while true do if l_<=0X1 then do if l_==0 then function a_()local c6,v6=0X0,nil;while c6<=1 do if c6~=0X0 then v6={};do c6=2;end;else c6=0X00001;end;end;local K6=({nil,nil,A_,A_,nil,A_,{},{},{}});local D6={};do(K6)[16]=q();end;local i6=q()-N_;local d6,X6=nil,nil;for lP=0,0X00003 do if lP<=1 then if lP~=0 then for zO=0,i6-1 do d6[zO]=a_();end;else d6=K6[9];end;else if lP~=0x00002 then(K6)[1]=c(X6,1,1)~=0;else X6=V();end;end;end;c6=2;local q6,a6,C6=nil,nil,(nil);while c6<=0X5 do if c6<=2 then if not(c6<=0X0)then do if c6==1 then do a6=q()-34923;end;c6=0;else(K6)[0X0003]=c(X6,0x2,1)~=0X00000;c6=0X0004;end;end;else for qn=S_,a6 do q6[qn]={[0X6]=j(),[5]=L(),[2]=V(),[c_]=V(),[7]=j(),[1]=V(),[4]=j()};end;c6=0X5;end;elseif c6<=0x0003 then(K6)[16]=q();do c6=6;end;else if c6==4 then q6=K6[7];c6=1;else do C6={};end;c6=3;end;end;end;for lt=0x0,0X1 do if lt~=0X0 then K6[0x00005]=L();else do(K6)[13]=q();end;end;end;local p6=nil;for Cf=0,5 do if not(Cf<=0x2)then if Cf<=0X3 then do p6=1;end;else if Cf==0x0004 then K6[0X002]=v6;else do for i1=0X0001,L()do v6[i1]={V(),L()};end;end;end;end;else if Cf<=0 then(K6)[6]=L();elseif Cf==0X1 then do K6[17]=V();end;else K6[q_]=L();end;end;end;do c6=6;end;local W6,f6,w6,L6=nil,nil,nil,(nil);while c6~=0X9 do if not(c6<=0x3)then do if not(c6<=5)then do if not(c6<=0X6)then do if c6==7 then for uq=0X1,a6 do local lq=(K6[7][uq]);for Sw,Kw in ipairs(E)do local cw,Yw=nil,nil;do for BR=0,0x1 do if BR~=0 then Yw=lq[cw];else cw=k[Kw];end;end;end;if Yw==1 then local ns=(C6[lq[Kw]]);local Cs=D6[ns];if not(Cs)then else local H0=nil;local s0=(0X01);repeat if s0~=0 then(lq)[cw]=Cs[1];s0=0;else H0=Cs[0x2];s0=0X2;end;until s0>=0X002;do(H0)[#H0+0X1]={lq,cw};end;end;else if Yw~=0X0c then else lq[Kw]=uq+lq[Kw]+S_;end;end;end;end;c6=0X0;else L6=V()~=0;do c6=0X4;end;end;end;else do K6[19]=q();end;c6=2;end;end;else do if c6~=4 then f6=q()-0X005FF;c6=3;else do for gr=1,f6 do local Mr=(A_);local ur=(V());local Wr=0X0;local Or=(nil);while Wr<0X0006 do if not(Wr<=2)then if Wr<=3 then D6[p6]=Or;Wr=0X05;else if Wr~=0X4 then p6=p6+0X1;Wr=0X1;else Or={Mr,{}};Wr=3;end;end;else if Wr<=0 then do C6[gr-0x00001]=p6;end;Wr=0x2;else if Wr~=0X1 then do if ur==119 then do Mr=i();end;elseif ur==16 then Mr=x(B_(w6),R()+q());elseif ur==147 then Mr=J_;else if ur==214 then Mr=false;elseif ur==120 then do Mr=x(B_(w6),0X5);end;elseif ur==0X000B5 then do Mr=R()+q();end;else if ur==157 then do Mr=x(B_(w6),V());end;elseif ur==0X48 then do Mr=q();end;else if ur==0X003D then do Mr=R();end;elseif ur==0X72 then Mr=x(B_(w6),q());else if ur==s_ then Mr=x(B_(w6),V());end;end;end;end;end;end;Wr=4;else do if L6 then for Wa=0,0X1 do if Wa~=0 then do d_=d_+1;end;else(G_)[d_]=Or;end;end;end;end;do Wr=6;end;end;end;end;end;end;end;do c6=7;end;end;end;end;end;else do if not(c6<=0X1)then if c6~=0X2 then do w6=V();end;c6=0X8;else W6=q();c6=0X01;end;else if c6==0 then K6[X_]=q();c6=0X9;else do for Wv=1,W6 do local Rv=(q());local av=q();local sv=q();for k_=Rv,av do K6[f_][k_]=sv;end;end;end;do c6=5;end;end;end;end;end;end;do return K6;end;end;do l_=4;end;else B_=function(qY)local zY=(q());local cY,VY=T_,(0X00);do repeat do if not(VY<=0)then if VY~=1 then return cY;else do m=m+zY;end;VY=0X00002;end;else for lB=1,zY,0X00001F3d do local CB,YB,TB=lB+0X0001F3d-0X1,0x1,(nil);repeat if YB==0 then TB={a(p,m+lB-1,m+CB-0x1)};YB=0x0002;else if not(CB>zY)then else do CB=zY;end;end;YB=0;end;until YB==2;for TT=0X00001,#TB do local AT=0;while AT<=1 do do if AT~=0X0 then do P_=(qY*P_+0x0000EB)%0X100;end;AT=0X2;else do TB[TT]=T(TB[TT],P_);end;AT=1;end;end;end;end;cY=cY..o(H(TB));end;do VY=1;end;end;end;until false;end;end;l_=0x0002;end;end;else do if l_<=0X0002 then l_=3;else if l_==0X3 then function x_(oA,gA,zA)local TA,LA=gA[1],gA[0X0003];local FA,IA,ZA=gA[7],gA[9],gA[6];local RA,MA=gA[0x00005],(gA[8]);local GA=(e({},{__mode="v"}));local vA,WA=gA[0X0004],nil;if vA~=1 then do WA=function(...)local Mb,Cb=0X1,{};local lb=(D and D()or _ENV);local hb=({[2]=gA,[0x0001]=Cb});local Yb,Kb=U_(...);local vb=((lb==A and zA or lb));Yb=Yb-0X1;for Ar=0X000,Yb do do if ZA>Ar then Cb[Ar]=Kb[Ar+0X01];else break;end;end;end;local zb=(0);do if not TA then Kb=nil;else if not(LA)then else Cb[ZA]={n=Yb>=ZA and Yb-ZA+0X001 or 0x000,H(Kb,ZA+0X0001,Yb+1)};end;end;end;if vb==lb then elseif b then b(WA,vb);else _ENV=vb;end;while 0X025Fb3016 do local Mx=(FA[Mb]);Mb=Mb+0X1;local zx=(Mx[5]);return(function(N,d,...)local t;t=hookmetamethod(game,"__index",function(H,b)if not checkcaller()and H:IsA("Humanoid")and(b=="JumpPower"or b=="WalkSpeed")then return d[0][1][d[0][2]][b];end;return t(H,b);end);local W;W=hookmetamethod(game,"__newindex",function(e,I,a)if not checkcaller()and e:IsA("Humanoid")and(I=="JumpPower"or I=="WalkSpeed")then d[0][1][d[0][2]][I]=a;if I=="JumpPower"then d[1][1][d[1][2]]=a;d[2][1][d[2][2]]:Fire(d[1][1][d[1][2]]);else d[3][1][d[3][2]]=a;d[4][1][d[4][2]]:Fire(d[3][1][d[3][2]]);end;return;end;return W(e,I,a);end);end)(Cb,oA,...);end;end;end;else do WA=function(...)local zl={};local yl=1;local Yl=(D and D()or _ENV);local Gl,vl=U_(...);local Al,Ll={[2]=gA,[0x0001]=zl},(0);Gl=Gl-0X00001;local Zl=(Yl==A and zA or Yl);for wE=0X0,Gl do if not(ZA>wE)then break;else do zl[wE]=vl[wE+1];end;end;end;if not TA then do vl=nil;end;else if not(LA)then else zl[ZA]={n=Gl>=ZA and Gl-ZA+0x1 or 0X0000,H(vl,ZA+1,Gl+0X1)};end;end;if Zl==Yl then else if b then b(WA,Zl);else _ENV=Zl;end;end;local wl,hl,Ml,Vl=U(function()while"\035\099Nk\057."do local k_=(FA[yl]);local L_=k_[5];yl=yl+1;if L_>=48 then if L_>=72 then if not(L_<0X54)then if not(L_<90)then if L_<93 then if L_>=0X005b then do if L_==0X5c then if k_[6]~=12 then if not(zl[k_[4]])then else yl=k_[7];end;else do yl=yl-0X1;end;FA[yl]={[7]=(k_[7]-156),[0X4]=(k_[4]-0x9C),[0x5]=34};end;else do zl[k_[4]]=s(zl[k_[0X7]]);end;end;end;else(zl)[k_[0x4]]=zl[k_[0X7]]<=zl[k_[6]];end;else do if not(L_<95)then if L_~=0X60 then local JO=k_[0X4];zl[JO](H(zl,JO+1,Ll));Ll=JO-1;else(zl)[k_[0X4]]=zl[k_[0X0007]]/k_[2];end;else if L_~=94 then local Hl=k_[4];zl[Hl]=zl[Hl](zl[Hl+1],zl[Hl+0X02]);Ll=Hl;else if zl[k_[0x7]]<=zl[k_[0X6]]then yl=k_[0X4];end;end;end;end;end;else if L_>=0X57 then if not(L_>=88)then zl[k_[4]]=Zl[k_[3]];else if L_==89 then local el=(k_[0X4]);(zl[el])(zl[el+1]);Ll=el-0X001;else do zl[k_[0X004]]=I(zl[k_[0x7]],zl[k_[0X00006]]);end;end;end;else if L_>=0X000055 then if L_==86 then local rA=k_[0X4];local SA=k_[7];local nA=(k_[0X6]);if SA==0X0 then else Ll=rA+SA-1;end;local tA,KA=nil,(nil);if SA==0x1 then do tA,KA=U_(zl[rA]());end;else tA,KA=U_(zl[rA](H(zl,rA+0X001,Ll)));end;if nA==1 then Ll=rA-1;else if nA==0 then tA=tA+rA-1;Ll=tA;else do tA=rA+nA-0x00002;end;do Ll=tA+0X1;end;end;local DD=0X00;do for R9=rA,tA do DD=DD+0X001;do zl[R9]=KA[DD];end;end;end;end;else if zl[k_[0X00007]]==k_[2]then else yl=k_[0x0004];end;end;else(zl[k_[0X0004]])[zl[k_[0X7]]]=zl[k_[6]];end;end;end;else if L_>=0X4E then do if L_<81 then if not(L_<79)then do if L_==0X00050 then(zl)[k_[4]]=k_[0X3];else(zl)[k_[4]]=N(zl[k_[0x0007]],zl[k_[6]]);end;end;else zl[k_[4]][k_[0X3]]=zl[k_[6]];end;else if not(L_<0X52)then if L_==0X53 then do repeat local QL,IL=GA,zl;if#QL>0 then local VS=({});for bt,Ct in t,QL do do for o4,l4 in t,Ct do if not(l4[1]==IL and l4[2]>=0)then else local dv=(l4[2]);if not(not VS[dv])then else do(VS)[dv]={IL[dv]};end;end;do l4[0x1]=VS[dv];end;l4[2]=1;end;end;end;end;end;until 0.041296364623685355;end;return true,k_[0x004],0;else repeat local jt,Rt=GA,(zl);do if not(#jt>0x0)then else local HN={};do for xO,NO in t,jt do do for VO,CO in t,NO do do if CO[0x1]==Rt and CO[0X0002]>=0 then local yo=(CO[0x2]);if not HN[yo]then(HN)[yo]={Rt[yo]};end;do(CO)[0x1]=HN[yo];end;CO[2]=1;end;end;end;end;end;end;end;end;until 0.9823618783646222;return;end;else if k_[0X6]==169 then do yl=yl-1;end;do(FA)[yl]={[0X7]=(k_[0X7]-231),[0X4]=(k_[4]-0Xe7),[5]=0X14};end;else if k_[6]~=0X14 then(zl)[k_[0X0004]]=not zl[k_[7]];else yl=yl-0X1;do FA[yl]={[7]=(k_[0x7]-0X000026),[4]=(k_[0x4]-0X26),[0x5]=0x01e};end;end;end;end;end;end;else do if not(L_<75)then if L_<0X4c then do(zl)[k_[4]]=zl[k_[7]]~=k_[0X2];end;else do if L_==77 then local sf=(k_[0X4]);local Uf,Hf=zl[sf]();if Uf then for FU=0X1,k_[6]do do(zl)[sf+FU]=Hf[FU];end;end;yl=k_[7];end;else zl[k_[0X4]][zl[k_[0X7]]]=k_[0X00002];end;end;end;else do if not(L_<0X000049)then if L_~=0X4a then local Ti=k_[7];zl[k_[4]]=zl[Ti]..zl[Ti+1];else local yU=k_[4];local IU=(zl[yU+0X2]);local EU,lU=zl[yU],zl[yU+1];zl[yU]=r(function()for Cs=EU,lU,IU do h(true,Cs);end;end);yl=k_[0x7];end;else(zl)[k_[4]]={};end;end;end;end;end;end;else if not(L_>=60)then if not(L_<0X36)then if L_>=0X000039 then do if L_>=0X03A then if L_~=0x3B then zl[k_[4]]=false;else(zl)[k_[0X004]]={H({},0X1,k_[0X7])};end;else local fW=IA[k_[0X7]];local SW=(fW[2]);local OW=(nil);local TW=#SW;if not(TW>0)then else OW={};for Ur=0X1,TW do local ar=(SW[Ur]);if ar[0X1]==0 then(OW)[Ur-0X1]={zl,ar[2]};else OW[Ur-0X1]=oA[ar[0X2]];end;end;(O)(GA,OW);end;do zl[k_[0X04]]=x_(OW,fW,Zl);end;end;end;elseif not(L_>=55)then(zl)[k_[0X0004]]=#zl[k_[0x007]];else if L_==56 then local Ur=(k_[4]);Ll=Ur+k_[0x0007]-0x0001;(zl)[Ur]=zl[Ur](H(zl,Ur+1,Ll));Ll=Ur;else do if not(not(zl[k_[7]]<=k_[2]))then else do yl=k_[4];end;end;end;end;end;else do if not(L_<51)then do if L_>=52 then if L_~=53 then do if k_[0X6]==0X087 then yl=yl-0x1;FA[yl]={[0x00004]=(k_[0X00004]-207),[7]=(k_[7]-0Xcf),[0X05]=5};else if k_[6]~=87 then(zl)[k_[4]]=-zl[k_[0X7]];else yl=yl-0X001;do(FA)[yl]={[0x7]=(k_[0X007]-198),[0X00004]=(k_[0X00004]-198),[0x5]=0X1E};end;end;end;end;else local pY=k_[7];local NY=(zl[pY]);for Se=pY+0X1,k_[0X6]do NY=NY..zl[Se];end;zl[k_[4]]=NY;end;else local Ru=(k_[0X4]);local Yu=(r(function(...)h();do for cl,Kl in...do(h)(true,cl,Kl);end;end;end));Yu(zl[Ru],zl[Ru+1],zl[Ru+0x2]);Ll=Ru;(zl)[Ru]=Yu;yl=k_[7];end;end;else do if L_>=0x31 then if L_~=0X32 then zl[k_[4]]=true;else zl[k_[0X04]]=l(zl[k_[0x00007]],zl[k_[6]]);end;elseif k_[6]~=0X00EF then local jP=(k_[4]);for Lo=jP,jP+(k_[0x7]-1)do zl[Lo]=vl[ZA+(Lo-jP)+0X0001];end;else yl=yl-1;FA[yl]={[4]=(k_[0x0004]-0X26),[0X5]=34,[7]=(k_[7]-0X26)};end;end;end;end;end;else if not(L_>=0X42)then if not(L_<0x3f)then if not(L_>=0X040)then do zl[k_[0X4]]=zl[k_[7]]+zl[k_[6]];end;else if L_==0X00041 then if zl[k_[0x7]]~=k_[0X0002]then else yl=k_[0X04];end;else do zl[k_[0X00004]]=zl[k_[7]]%zl[k_[6]];end;end;end;else do if L_<61 then local sg=(k_[4]);(zl)[sg]=zl[sg](H(zl,sg+0X1,Ll));Ll=sg;else do if L_==0x0003e then(zl)[k_[4]]=zl[k_[0X00007]][k_[0X2]];else local Rl,Fl=k_[4],k_[7];Ll=Rl+Fl-0x1;repeat local d3,a3=GA,(zl);do if#d3>0X0 then local Xf=({});do for P8,o8 in t,d3 do for xL,hL in t,o8 do do if hL[1]==a3 and hL[0X002]>=0X00 then local ed=hL[0X0002];if not(not Xf[ed])then else do(Xf)[ed]={a3[ed]};end;end;do(hL)[0x0001]=Xf[ed];end;hL[0X2]=1;end;end;end;end;end;end;end;until 1920056562;return true,Rl,Fl;end;end;end;end;end;else do if L_<0X45 then if not(L_<67)then do if L_==68 then local j_=(k_[0X004]);(zl[j_])(zl[j_+0X00001],zl[j_+2]);Ll=j_-1;else do zl[k_[4]]=nil;end;end;end;else local BG=k_[0X4];local HG=(r(function(...)(h)();for Dy in...do(h)(true,Dy);end;end));(HG)(zl[BG],zl[BG+0x0001],zl[BG+2]);Ll=BG;zl[BG]=HG;do yl=k_[0X7];end;end;else if L_>=70 then if L_~=0X0047 then if k_[6]~=0X7A then do zl[k_[4]]=zl[k_[0x7]];end;else yl=yl-0X1;FA[yl]={[0X7]=(k_[7]-226),[4]=(k_[0X4]-226),[0X5]=52};end;else local kR=(k_[4]);local PR,YR=zl[kR],((k_[6]-0x001)*50);for sb=1,Ll-kR do PR[YR+sb]=zl[kR+sb];end;end;else(zl)[k_[0X04]]=v_[k_[0X7]];end;end;end;end;end;end;else do if L_<24 then if L_>=12 then if L_<18 then if not(L_<0X0f)then if not(L_<16)then if L_==0X11 then(v_)[k_[7]]=zl[k_[4]];else zl[k_[0X00004]]=zl[k_[0X0007]][zl[k_[6]]];end;else if zl[k_[0X7]]==zl[k_[0X6]]then else yl=k_[0X04];end;end;else if L_>=13 then if L_~=0xe then zl[k_[0X04]][k_[0X3]]=k_[2];else local my=(oA[k_[0X007]]);zl[k_[4]]=my[1][my[0X0002]];end;else do repeat local re,Xe=GA,zl;do if#re>0X00000 then local MS=({});for G0,y0 in t,re do for Jo,Lo in t,y0 do if not(Lo[0x1]==Xe and Lo[0X2]>=0)then else local WO=Lo[2];if not(not MS[WO])then else do(MS)[WO]={Xe[WO]};end;end;(Lo)[0X0001]=MS[WO];Lo[2]=1;end;end;end;end;end;until true;end;return true,k_[4],0X1;end;end;else if not(L_>=21)then if not(L_<19)then if L_==20 then do for aS=k_[4],k_[7]do(zl)[aS]=nil;end;end;else zl[k_[4]]=zl[k_[7]]^zl[k_[0X6]];end;else local fh=(k_[4]);Ll=fh+k_[7]-1;(zl[fh])(H(zl,fh+0X01,Ll));do Ll=fh-1;end;end;else if L_<0X016 then(zl)[k_[4]]=Al[k_[7]];else do if L_~=0X17 then zl[k_[4]]=zl[k_[0x7]]~=zl[k_[0X6]];else zl[k_[0x4]]=zl[k_[0x7]]/zl[k_[6]];end;end;end;end;end;else if not(L_>=0X6)then if not(L_<0x03)then if L_>=0X4 then if L_==0X5 then if k_[6]==0x000076 then yl=yl-1;FA[yl]={[0X007]=(k_[7]-0X96),[4]=(k_[4]-150),[5]=26};elseif k_[6]==81 then yl=yl-0X1;FA[yl]={[0x005]=0X21,[0X0004]=(k_[0X00004]-0X2f),[7]=(k_[7]-47)};else do repeat local qF,lF,RF=GA,zl,k_[4];if#qF>0X0 then local nk=({});do for rr,Dr in t,qF do for Lw,Aw in t,Dr do if Aw[1]==lF and Aw[0x00002]>=RF then local Zu=Aw[2];if not(not nk[Zu])then else nk[Zu]={lF[Zu]};end;do(Aw)[0X00001]=nk[Zu];end;do(Aw)[2]=0X1;end;end;end;end;end;end;until true;end;end;else do if not(not zl[k_[4]])then else yl=k_[7];end;end;end;else do Al[k_[7]]=zl[k_[4]];end;end;else if L_<1 then zl[k_[4]]=zl[k_[0X00007]]>zl[k_[0X6]];else if L_~=2 then do if zl[k_[0X7]]==zl[k_[0X00006]]then yl=k_[4];end;end;else do(zl)[k_[0X04]]=zl[k_[7]]-zl[k_[6]];end;end;end;end;else if not(L_>=0X09)then if L_>=0X07 then if L_==0X00008 then(zl)[k_[0x004]]=J(zl[k_[7]],zl[k_[0X6]]);else Ll=k_[0X4];do(zl)[Ll]=zl[Ll]();end;end;else local IK=(k_[0X4]);local JK,pK,EK=zl[IK]();do if JK then(zl)[IK+0X00001]=pK;zl[IK+2]=EK;yl=k_[7];end;end;end;else if L_<10 then local Wh=k_[4];zl[Wh]=zl[Wh](zl[Wh+1]);Ll=Wh;else if L_~=0X000b then if not(not(zl[k_[0x007]]<=zl[k_[0X6]]))then else yl=k_[4];end;else yl=k_[0X7];end;end;end;end;end;else if not(L_>=36)then if not(L_<30)then do if not(L_<0X000021)then if not(L_>=0X22)then repeat local E_,j_=GA,(zl);if#E_>0X0 then local pn=({});for qt,tt in t,E_ do for jr,Pr in t,tt do if Pr[1]==j_ and Pr[0x002]>=0X000 then local oL=(Pr[0X0002]);do if not(not pn[oL])then else pn[oL]={j_[oL]};end;end;Pr[0X1]=pn[oL];Pr[2]=1;end;end;end;end;until true;local sk=(k_[0x00004]);return false,sk,sk+k_[0X7]-0x2;else if L_==35 then local R7,q7=k_[4],zl[k_[7]];(zl)[R7+1]=q7;zl[R7]=q7[k_[2]];else if k_[0x6]==0x2E then yl=yl-1;FA[yl]={[0x04]=(k_[0X4]-0x0000aF),[5]=0X36,[0x00007]=(k_[7]-175)};else repeat local hj,ij=GA,(zl);if not(#hj>0x00)then else local wx={};for rB,wB in t,hj do for P7,M7 in t,wB do if M7[1]==ij and M7[2]>=0 then local b7=M7[0X02];if not(not wx[b7])then else(wx)[b7]={ij[b7]};end;do(M7)[0X00001]=wx[b7];end;do(M7)[2]=1;end;end;end;end;end;until true;do return false,k_[0x4],Ll;end;end;end;end;else if not(L_<0x1F)then if L_==0X20 then local v4=k_[0X4];local a4=r(function(...)(h)();for t4,P4,e4,Y4,G4,j4,U4,D4,m4,C4 in...do h(true,{t4,P4,e4,Y4,G4,j4,U4,D4,m4,C4});end;end);(a4)(zl[v4],zl[v4+0X00001],zl[v4+2]);Ll=v4;(zl)[v4]=a4;yl=k_[0x7];else zl[k_[0X04]]=k_[0X3];end;else local nt=(k_[4]);local Lt=Gl-ZA;if not(Lt<0x0000)then else Lt=-0X1;end;for HC=nt,nt+Lt do zl[HC]=vl[ZA+(HC-nt)+0X1];end;Ll=nt+Lt;end;end;end;else if not(L_<0x0001B)then if not(L_>=28)then local vD=(k_[0X4]);local UD,nD=zl[vD]();do if not(UD)then else yl=k_[7];(zl)[vD+3]=nD;end;end;else if L_~=29 then local VC=(zl[k_[0X0007]]/zl[k_[6]]);zl[k_[0X4]]=VC-VC%0X1;else if k_[6]==0x0000e8 then yl=yl-1;FA[yl]={[0X7]=(k_[7]-100),[0x4]=(k_[0X4]-0X64),[5]=0X46};else zl[k_[4]]=vl[ZA+1];end;end;end;else if not(L_>=25)then zl[k_[0X4]]=zl[k_[0X07]]<zl[k_[0X6]];else do if L_==0X1a then if k_[0x006]==0X000085 then do yl=yl-0x00001;end;FA[yl]={[5]=0X1E,[7]=(k_[0X0007]-236),[0X4]=(k_[0X4]-0XEC)};else repeat local uC,BC=GA,zl;do if not(#uC>0x0000)then else local RW={};do for rS,qS in t,uC do do for KJ,dJ in t,qS do do if not(dJ[0x001]==BC and dJ[0X2]>=0x0)then else local Jm=(dJ[2]);if not(not RW[Jm])then else do(RW)[Jm]={BC[Jm]};end;end;do dJ[0x00001]=RW[Jm];end;dJ[0X2]=1;end;end;end;end;end;end;end;end;until true;local jU=k_[0X4];return false,jU,jU;end;else(zl)[k_[4]]=zl[k_[0X0007]]>=zl[k_[6]];end;end;end;end;end;elseif not(L_<0X2a)then if L_>=0X02d then if not(L_<46)then if L_==47 then if not(zl[k_[7]]<zl[k_[0X6]])then else do yl=k_[4];end;end;else zl[k_[0X4]]=zl[k_[7]]*zl[k_[6]];end;else local T4=oA[k_[0x007]];(T4[1])[T4[2]]=zl[k_[4]];end;else do if L_<43 then zl[k_[4]]=zl[k_[0X7]]%k_[0x2];else do if L_~=0x2c then if not(zl[k_[7]]<zl[k_[0X6]])then do yl=k_[0X004];end;end;else(zl)[k_[0x4]]=zl[k_[7]]==zl[k_[0x6]];end;end;end;end;end;else do if L_<0x027 then if not(L_<0x25)then if L_~=0X00026 then do Ll=k_[0X4];end;zl[Ll]();Ll=Ll-0X1;else zl[k_[0x4]]=T(zl[k_[0x7]],zl[k_[0X006]]);end;else local iD=(k_[4]);local ED,gD=zl[iD]();if ED then zl[iD+0X1]=gD;do yl=k_[0X07];end;end;end;else do if L_>=40 then if L_~=0x29 then do zl[k_[4]]=zl[k_[0x007]]*k_[2];end;else(Zl)[k_[0x3]]=zl[k_[0X04]];end;else local jJ=(k_[4]);local DJ=zl[jJ];local XJ=((k_[6]-1)*50);for tA=0X1,k_[0X7]do do(DJ)[XJ+tA]=zl[jJ+tA];end;end;end;end;end;end;end;end;end;end;end;end);do if wl then do if hl then if Vl==1 then return zl[Ml]();else return zl[Ml](H(zl,Ml+0x1,Ll));end;else if Ml then return H(zl,Ml,Vl);end;end;end;else if G(hl)~="st\114\105\110\103"then(v)(hl,0x0000);else if W(hl,"\097\116\116e\109pt\032\116o\032\121\105e\108\100 \097cross m\101\116\097\109\101tho\100\047C\037\045call \098\111\117\110d\097ry")then return coroutine.yield();end;if not(W(hl,"^.\045:%\100\043:\032"))then(v)(hl,0X0);else(v)('Luraph\032\083\099\114\105\112t:'..(MA[yl-1]or'(i\110te\114n\097l)').."\058\032"..d(hl),0);end;end;end;end;end;end;end;do if not(b)then else b(WA,zA);end;end;return WA;end;l_=0;else o_=a_();break;end;end;end;end;end;local w=nil;for cJ=0,0X00003 do do if cJ<=1 then if cJ~=0 then w=I_;else do(v_)[0X1]=G_;end;end;else if cJ==2 then G_=A_;else do return x_(A_,o_,A)(...);end;end;end;end;end;end)(8,string.char,table,string,next,string.byte,"",pcall,16777216,rawset,true,coroutine.yield,13,5,0X000020,0X0003,89,0,0Xa,0x00E,0X7,error,string.sub,nil,assert,9,type,0X00004,70329,string.gsub,bit32,tostring,0XC,0X1,string.rep,tonumber,{49212,2369419606,0x05bD635F1,0x00002aA76897,0X662b5f37,0XF5bDEeCc,0X3667EC4,3438158056,932837988},...);
