-- This file was generated using Luraph Obfuscator v13.5.9

return(function(NC,zC,TC,DC,EC,eC,tC,bC,qC,rC,MC,AC,fC,XC,kC,nC,YC,IC,VC,HC,BC,GC,ZC,KC,oC,wC,xC,aC,pC,JC,uC,gC,sC,vC,P,...)local iC,S,T,q=1,nil,nil,(nil);while 0.1464287171912947 do if not(iC<=0)then do if iC~=1 then T=0X1;iC=0;else do S=wC;end;iC=2;end;end;else q=XC;break;end;end;local R,h,l=pcall,tostring,(IC);local y,X,z,N,w,K,k=nil,nil,nil,nil,nil,nil,(nil);for od=0x00000,6 do if not(od<=2)then do if od<=4 then do if od==0x003 then N="LPH$";else do w=KC.rep;end;end;end;else if od==0x5 then do K=YC;end;else k=2^0x34;end;end;end;else if not(od<=0X0000)then if od~=0X0001 then do z=0x000100000000;end;else X=KC.gsub;end;else y=KC.char;end;end;end;local A=(AC);local J=unpack or ZC;local E,d=next,error;do iC=0X00000;end;local c=nil;while iC<0X02 do if iC~=0X0 then do iC=2;end;else c=EC;iC=0X01;end;end;local Q=tonumber;local s=({[0]={[0X0]=eC,1,0X00002,0x3,4,0X5,0X06,7,0X8,9,10,0XB,0x00c,qC,14,15},{[0]=0X001,0X0000,0X00003,0X2,0X05,0X4,7,6,0x09,0X8,11,0X0a,13,0X000C,0XF,0XE},{[0]=JC,0X3,0x0000,0X1,0X00006,7,4,0X5,10,11,0X8,HC,0xE,15,12,13},{[0]=3,2,1,0,7,6,5,0X4,11,0xA,0X9,aC,0X0000f,14,13,0X0000c},{[0]=4,0X5,0X6,7,0X0,0X1,0X2,0x003,12,0XD,14,0X000F,8,0x00009,10,0X00B},{[0]=0x5,tC,0X0007,TC,1,eC,3,0X2,qC,12,0Xf,0X00E,0X09,8,11,NC},{[0]=6,7,0X004,5,2,0X3,0X0,VC,0xE,0XF,0X0000C,0Xd,10,0XB,0X00008,9},{[0X0]=7,TC,0X5,0X4,3,2,0X1,0X00000,15,14,0XD,DC,11,10,0x9,8},{[0]=8,0X9,0X0000A,0xb,12,0Xd,0XE,15,0,1,0x002,0X3,tC,5,TC,0X7},{[eC]=0X9,0X0008,11,0x0000A,0XD,0x0000C,0X000f,0X00e,1,0,0X3,2,5,4,7,0X6},{[0X0000]=10,11,0X008,9,14,15,12,0X00d,0X02,3,0X0,0X00001,0X6,7,4,5},{[eC]=11,10,0X009,0X8,15,0X000e,qC,0XC,3,0X2,1,0X0000,rC,6,nC,4},{[0]=0XC,0XD,0xe,15,aC,0X9,0Xa,11,4,5,0X0006,7,0,0X01,2,0X003},{[0X0]=13,0XC,15,0x00e,9,aC,11,0X0000a,0X5,4,7,6,1,0,0x3,0x2},{[0X0]=0X00E,15,0xC,13,NC,0X0000b,8,9,6,7,0X4,0X5,0X00002,3,eC,1},{[0x0]=0xF,14,0xD,12,11,10,0X9,0X08,0X07,0X6,5,tC,3,2,0X1,0X00}});local a=getfenv;local t=(a and a()or _ENV);iC=0X1;local H=(nil);repeat if iC~=0X000 then iC=0X00000;else H=bC;iC=2;end;until iC>0X0001;iC=0X2;local V,D=nil,nil;do repeat do if not(iC<=0X0)then if iC~=0X001 then do iC=1;end;else do N=X(l(N,0X005),"..",function(XW)if c(XW,0X2)~=72 then local Q1=y(Q(XW,16));if not(V)then return Q1;else local hQ=nil;local GQ=(2);repeat if not(GQ<=0X000)then if GQ==0x1 then return hQ;else hQ=w(Q1,V);GQ=0;end;else V=nil;GQ=1;end;until false;end;else do V=Q(l(XW,1,1));end;return'';end;end);end;iC=0;end;else D=function()local aq=c(N,T,T);T=T+1;return aq;end;iC=3;end;end;until iC==3;end;local Y,L=setmetatable,(zC);do iC=0X0;end;local b,g=nil,(nil);repeat if iC~=0 then g=b-1;iC=2;else b=2147483648;iC=0X0001;end;until iC==0x0002;local I=(KC.match);do iC=0X1;end;local O,e=nil,(nil);while iC<=0X1 do if iC==0 then e=kC;iC=2;else do O={2,0X1,3};end;iC=0X00;end;end;local F,u=uC,(z-1);iC=1;local r,f,v=nil,nil,nil;while iC<4 do if iC<=1 then if iC==0x0 then v={[0X0]=1};iC=0X2;else do r=function()local ox=(0X2);local xx,mx,Px,Ux=nil,nil,nil,nil;do while(true)do if not(ox<=0x00000)then if ox==1 then T=T+4;ox=0x0000;else do xx,mx,Px,Ux=c(N,T,T+3);end;ox=1;end;else return Ux*0X1000000+Px*0X00010000+mx*0X100+xx;end;end;end;end;end;do iC=3;end;end;else if iC==2 then do local Vq,Hq=1,nil;repeat if Vq==0X00 then for oL=0x1,0x01F do for sa=0,0X1 do if sa==0 then v[oL]=Hq;else Hq=Hq*2;end;end;end;break;else Hq=2;Vq=0;end;until(false);end;iC=4;else f=function()local Bd,Id=r(),r();local gd=(0X0);while(true)do do if gd==0X0 then if not(Id>=b)then else Id=Id-z;end;gd=1;else return Id*z+Bd;end;end;end;end;do iC=0;end;end;end;end;do iC=0;end;local G,B,x=nil,nil,(nil);while iC<3 do if iC<=0X000 then G=function(lT,ST,IT)local eT,oT=0X1,nil;while(true)do if not(eT<=0)then do if eT==0X01 then oT=(lT/v[ST])%v[IT];do eT=0;end;else return oT;end;end;else oT=oT-oT%1;eT=2;end;end;end;do iC=1;end;else if iC==0x1 then do B=function()local lg=r();local fg=r();local Qg,Ig,xg,Eg=0X0000,nil,nil,nil;do while Qg<=3 do if Qg<=1 then if Qg==0 then Ig=0X1;Qg=0x00002;else do xg=(-1)^G(fg,0X1f,0X01);end;Qg=0x003;end;else if Qg==0X00002 then if lg==eC and fg==0X00 then return 0;end;Qg=0x1;else Eg=G(fg,gC,0X0000B);Qg=0X4;end;end;end;end;do Qg=2;end;local ag=nil;repeat if Qg<=0X0 then return xg*(JC^(Eg-1023))*(ag/k+Ig);else if Qg~=0X001 then ag=G(fg,0X0000,0X14)*z+lg;Qg=1;else if Eg==0X0 then if ag==0 then do return xg*0X0;end;else local GK=0X0;do while GK<2 do if GK==0 then Eg=0x00001;GK=1;else do Ig=0X0;end;GK=2;end;end;end;end;elseif Eg~=2047 then else if ag==eC then return xg*(0X0/0);else do return xg*(1/0x00);end;end;end;do Qg=0;end;end;end;until(false);end;end;iC=2;else x=(vC or GC);do iC=3;end;end;end;end;local o=x and x[fC]or function(km,zm)local Zm,Mm=nil,(nil);local bm=0X0001;while bm~=0X5 do if not(bm<=1)then if not(bm<=0X2)then do if bm==3 then while km>0X0 and zm>0x00000 do local aY,pY,tY=km%16,0X01,nil;while pY<=2 do do if pY<=0X000 then km=(km-aY)/0X10;do pY=3;end;else if pY==0X1 then tY=zm%16;pY=0X2;else Zm=Zm+s[aY][tY]*Mm;pY=0X0;end;end;end;end;for FN=0X0,0x1 do if FN==0X0 then zm=(zm-tY)/16;else Mm=Mm*16;end;end;end;bm=5;else Mm=1;do bm=3;end;end;end;else zm=zm%z;bm=0X4;end;else do if bm~=0X0 then km=km%z;bm=0X0;else Zm=0;bm=0X00002;end;end;end;end;return Zm+km*Mm+zm*Mm;end;local M=x and x[BC]or function(Rw,Lw)local lw=(0X002);repeat if not(lw<=0X0)then if lw==0x1 then Lw=Lw%z;do lw=0;end;else Rw=Rw%z;lw=1;end;else return((Rw+Lw)-o(Rw,Lw))/2;end;until false;end;local p=(x and x[sC]or function(fi,Wi)local hi=(0);while hi<=0x1 do if hi==0 then fi=fi%z;hi=1;else do Wi=Wi%z;end;do hi=2;end;end;end;return u-M(u-fi,u-Wi);end);local i,C=x and x.bnot or function(pE)return u-(pE%z);end,(x and x.lshift);local U,j,W=x and x.rshift,nil,(nil);local FC,dC={},({});for ZG=0,0X3 do if not(ZG<=1)then do if ZG~=0X2 then W=function()local q1=0;local y1=0X000;repeat local v5=(c(N,T,T));T=T+0x001;q1=p(q1,C(M(v5,127),y1));if M(v5,0x80)==0X00000 then return q1;end;do y1=y1+0X7;end;until false;end;else j={[0X0001]=5,[HC]=0X06,[2]=0X07,[0x007]=0X0004,[6]=0x9,[0X007]=0x4,[0X003]=4,[0X07]=3};end;end;else do if ZG==0X000 then C=C or function(cD,kD)local UD=0X0;while true do do if UD==0x0 then if kD>=32 then return 0X0;end;UD=0x1;else do if not(kD<0)then else do return U(cD,-kD);end;end;end;do break;end;end;end;end;return(cD*v[kD])%z;end;else U=U or function(MX,CX)local pX=(1);while pX~=2 do do if pX~=0X0 then if not(CX>=32)then else do return 0X00000;end;end;pX=0x0000;else if not(CX<0X0)then else return C(MX,-CX);end;pX=2;end;end;end;local QX=((MX%z/v[CX]));return QX-QX%1;end;end;end;end;end;local PC=D();local LC=(D());local SC=function(tf)local mf=({c(N,T,T+3)});local Gf,yf=nil,nil;local Xf=0X0;while Xf<=0X0001 do if Xf~=0X0 then do yf=o(mf[0x2],LC);end;Xf=2;else Gf=o(mf[1],LC);do Xf=1;end;end;end;Xf=0X1;local Lf,xf=nil,nil;while true do do if Xf<=0X1 then if Xf==0x0 then xf=o(mf[0X0004],LC);do Xf=3;end;else Lf=o(mf[0x3],LC);Xf=0X0;end;else do if Xf<=0X0002 then return xf*0X1000000+Lf*65536+yf*256+Gf;else if Xf~=0X3 then do T=T+4;end;Xf=0X2;else LC=(0x00002d*LC+tf)%256;Xf=0x4;end;end;end;end;end;end;end;local m=function()local ti=(0X02);local ni=nil;while-0X3eC250eE do if ti<=0 then return ni;else if ti~=0X1 then ni=W();ti=1;else if ni>g then return ni-z;end;ti=0x0;end;end;end;end;local RC=function(...)return S('\035',...),{...};end;local hC=0X1;local QC=(function(xX)local IX=(r());local DX="";do for KG=0X0,2 do if KG<=0X0 then for Vi=1,IX,xC do local ri,Ii=nil,nil;for Pr=0X00,0X2 do if Pr<=0 then do ri=Vi+7997-1;end;elseif Pr~=0X1 then do Ii={c(N,T+Vi-0X00001,T+ri-1)};end;else if ri>IX then ri=IX;end;end;end;local Zi=0X0000;while Zi~=2 do if Zi~=0 then DX=DX..y(J(Ii));Zi=2;else for qp=0X1,#Ii do(Ii)[qp]=o(Ii[qp],PC);PC=(xX*PC+0X69)%256;end;Zi=1;end;end;end;else do if KG==1 then T=T+IX;else return DX;end;end;end;end;end;end);local function lC(JW,qW,WW)local fW,tW=JW[2],(JW[3]);local FW=(JW[1]);local oW=(JW[0X7]);local zW=(JW[0x9]);local eW=JW[0X8];local ZW=JW[5];local DW=JW[0X4];local MW=(Y({},{__mode='\118'}));local PW=(nil);do if oW==1 then PW=function(...)local RU,rU=0X0001,({});local AU=((a and a()or _ENV));local qU,uU={[2]=rU,[0X1]=JW},(AU==t and WW or AU);local aU,HU=RC(...);aU=aU-1;local cU=(0x0000);do for Um=0X0,aU do do if FW>Um then(rU)[Um]=HU[Um+1];else break;end;end;end;end;if not tW then HU=nil;else if not(ZW)then else do rU[FW]={n=aU>=FW and aU-FW+0X1 or 0,J(HU,FW+1,aU+1)};end;end;end;do if uU~=AU then do if H then(H)(PW,uU);else do _ENV=uU;end;end;end;end;end;local dU,LU,oU,QU=R(function()do repeat local IA=zW[RU];local VA=IA[6];RU=RU+0X1;do if VA<0X030 then if VA>=24 then if VA>=0X000024 then if VA>=42 then if VA>=0X2d then if not(VA>=46)then rU[IA[1]]=qU[IA[3]];else do if VA==47 then(rU)[IA[1]]=p(rU[IA[3]],rU[IA[0X2]]);else rU[IA[0X1]]=rU[IA[3]]/rU[IA[2]];end;end;end;else if VA<43 then(rU)[IA[1]]=rU[IA[3]]*IA[7];else if VA==44 then local jI=(IA[1]);local SI,YI,bI=rU[jI]();if SI then(rU)[jI+1]=YI;(rU)[jI+2]=bI;RU=IA[3];end;else(uU)[IA[4]]=rU[IA[1]];end;end;end;else if not(VA<39)then if VA<0x000028 then if IA[2]==0x000021 then do RU=RU-0X1;end;zW[RU]={[0x3]=(IA[3]-0X0034),[0x6]=81,[1]=(IA[0X1]-0X34)};elseif IA[0X2]~=0X000a4 then repeat local Qq,Nq,fq=MW,rU,(IA[0X1]);do if#Qq>0 then local LP={};do for gI,dI in E,Qq do for zU,IU in E,dI do if not(IU[1]==Nq and IU[2]>=fq)then else local iI=IU[2];if not LP[iI]then do(LP)[iI]={Nq[iI]};end;end;IU[0X1]=LP[iI];IU[0X0002]=1;end;end;end;end;end;end;until true;else do RU=RU-1;end;zW[RU]={[0X0006]=69,[0X00001]=(IA[1]-183),[0X3]=(IA[3]-183)};end;else if VA~=0X29 then local PM=(IA[0X01]);local HM=e(function(...)q();for HR,YR,zR,uR,QR,gR,pR,WR,DR,lR in...do q(true,{HR,YR,zR,uR,QR,gR,pR,WR,DR,lR});end;end);(HM)(rU[PM],rU[PM+1],rU[PM+0X02]);cU=PM;do(rU)[PM]=HM;end;RU=IA[0X3];else do(rU)[IA[0X001]]=rU[IA[3]]+rU[IA[2]];end;end;end;else if VA<0X25 then(rU)[IA[1]]=-rU[IA[3]];else if VA==38 then local oQ=eW[IA[0x3]];local VQ=nil;local gQ=oQ[6];local bQ=(#gQ);do if not(bQ>0X0)then else VQ={};for Zp=1,bQ do local Ap=gQ[Zp];do if Ap[0x1]==0 then VQ[Zp-1]={rU,Ap[2]};else VQ[Zp-0X01]=qW[Ap[0X2]];end;end;end;K(MW,VQ);end;end;rU[IA[1]]=lC(oQ,VQ,uU);else local IJ=(IA[0X1]);(rU[IJ])(J(rU,IJ+0X1,cU));cU=IJ-1;end;end;end;end;else if not(VA>=30)then if not(VA<27)then if not(VA>=28)then rU[IA[0X00001]]=rU[IA[3]]^rU[IA[0X2]];else if VA~=0X00001D then(rU)[IA[1]]=false;else rU[IA[0X1]]=C(rU[IA[3]],rU[IA[2]]);end;end;else if not(VA<0X19)then if VA~=0X1A then if not(not(rU[IA[3]]<rU[IA[2]]))then else RU=IA[0x0001];end;else RU=IA[3];end;else if not(not(rU[IA[0X3]]<=IA[0X7]))then else RU=IA[1];end;end;end;else if not(VA<33)then if not(VA<34)then if VA==35 then do rU[IA[1]]=uU[IA[0X4]];end;else(rU)[IA[1]]=rU[IA[0X3]]%rU[IA[2]];end;else repeat local YL,uL=MW,rU;if not(#YL>0)then else local XA=({});do for aH,OH in E,YL do for r2,L2 in E,OH do do if not(L2[0X001]==uL and L2[0X0002]>=0X0)then else local SG=L2[0X02];do if not XA[SG]then(XA)[SG]={uL[SG]};end;end;L2[0X0001]=XA[SG];do L2[2]=0x1;end;end;end;end;end;end;end;until 0x143DE873;local Jm=(IA[1]);return false,Jm,Jm+IA[3]-2;end;else if not(VA<0X1f)then if VA==0X20 then do if IA[0X002]==0X053 then RU=RU-0x1;zW[RU]={[1]=(IA[0X1]-218),[0X3]=(IA[3]-0XDa),[6]=0X0051};elseif IA[0X00002]==0X00088 then RU=RU-1;zW[RU]={[6]=17,[3]=(IA[3]-0X03B),[1]=(IA[1]-0X3b)};else(rU)[IA[1]]=not rU[IA[3]];end;end;else cU=IA[0X001];(rU[cU])();cU=cU-1;end;elseif not(rU[IA[3]]<=rU[IA[0x2]])then else RU=IA[1];end;end;end;end;else if VA<12 then if VA<6 then if not(VA<0X3)then if VA<0X4 then local Kr=IA[1];(rU)[Kr]=rU[Kr](rU[Kr+0X1],rU[Kr+2]);cU=Kr;else if VA~=5 then(rU)[IA[0X1]]=rU[IA[3]]<rU[IA[2]];else rU[IA[1]]=rU[IA[0X3]]-rU[IA[2]];end;end;else if not(VA<0X1)then if VA~=0X0002 then rU[IA[0x1]]=dC[IA[3]];else local sV,YV=IA[1],rU[IA[0X3]];do(rU)[sV+1]=YV;end;(rU)[sV]=YV[IA[0X7]];end;else local Ir=(IA[0X001]);rU[Ir]=rU[Ir](rU[Ir+0x1]);cU=Ir;end;end;else if VA<9 then if not(VA>=7)then(rU)[IA[0X1]]={};else if VA==0x008 then repeat local hk,Rk=MW,rU;do if#hk>0 then local gM={};for bA,qA in E,hk do for wm,pm in E,qA do if not(pm[0X1]==Rk and pm[2]>=0)then else local eq=(pm[0x2]);if not gM[eq]then gM[eq]={Rk[eq]};end;(pm)[1]=gM[eq];pm[0x2]=0X01;end;end;end;end;end;until true;do return;end;else(rU[IA[1]])[IA[0X04]]=IA[0X007];end;end;else if not(VA>=0xa)then if rU[IA[0X0003]]~=rU[IA[0X0002]]then else RU=IA[1];end;else if VA~=0XB then do if rU[IA[0X0003]]~=IA[0X7]then RU=IA[0X1];end;end;else if not(rU[IA[3]]<=rU[IA[0X2]])then RU=IA[0X1];end;end;end;end;end;else if not(VA>=0X012)then do if not(VA>=0XF)then if not(VA<0Xd)then do if VA==14 then local K9=(IA[0X3]);do(rU)[IA[0X0001]]=rU[K9]..rU[K9+0x0001];end;else if rU[IA[1]]then RU=IA[0X3];end;end;end;else local gH,aH=IA[0X00001],IA[0x3];cU=gH+aH-1;repeat local bd,ud=MW,(rU);do if not(#bd>0)then else local TN={};for LH,jH in E,bd do for MO,wO in E,jH do if wO[1]==ud and wO[2]>=0 then local Ue=(wO[0X02]);if not TN[Ue]then do TN[Ue]={ud[Ue]};end;end;wO[1]=TN[Ue];wO[2]=0X01;end;end;end;end;end;until true;do return true,gH,aH;end;end;else if not(VA>=16)then local tM=(IA[0X01]);rU[tM](rU[tM+0X0001]);do cU=tM-1;end;else if VA==17 then do repeat local MM,YM=MW,(rU);do if not(#MM>0X0)then else local V7={};for Pp,yp in E,MM do for lm,nm in E,yp do if nm[1]==YM and nm[2]>=0 then local as=nm[0x2];do if not(not V7[as])then else(V7)[as]={YM[as]};end;end;(nm)[1]=V7[as];nm[0X2]=0X1;end;end;end;end;end;until true;end;return false,IA[1],cU;else(rU)[IA[0X1]]=#rU[IA[0X3]];end;end;end;end;elseif VA<0X15 then if VA>=19 then if VA~=20 then local ha=(IA[0X2]-0X00001)*50;local Pa=(IA[1]);local Sa=rU[Pa];for Fm=0X1,cU-Pa do(Sa)[ha+Fm]=rU[Pa+Fm];end;else local xM=IA[0X1];local jM=rU[xM+1];local WM=rU[xM];local vM=rU[xM+0x2];(rU)[xM]=e(function()do for Su=WM,jM,vM do(q)(true,Su);end;end;end);do RU=IA[0X03];end;end;else repeat local ip,xp=MW,rU;if#ip>0 then local YE={};for o5,I5 in E,ip do for tg,dg in E,I5 do if dg[0X00001]==xp and dg[2]>=0x00000 then local jQ=(dg[2]);do if not(not YE[jQ])then else(YE)[jQ]={xp[jQ]};end;end;(dg)[1]=YE[jQ];(dg)[0X002]=0X1;end;end;end;end;until true;return true,IA[1],1;end;else if not(VA>=22)then(rU)[IA[0X001]]=U(rU[IA[3]],rU[IA[0X0002]]);else do if VA~=0X0017 then do rU[IA[1]]=rU[IA[3]][IA[0X7]];end;else do rU[IA[0X0001]][rU[IA[0X3]]]=IA[0x7];end;end;end;end;end;end;end;else if not(VA<72)then do if not(VA>=84)then if not(VA<0X004E)then if not(VA<0x000051)then if not(VA>=0x000052)then do if IA[2]~=0X00C9 then(rU)[IA[1]]=nil;else do RU=RU-0X1;end;do(zW)[RU]={[0X01]=(IA[1]-224),[0X3]=(IA[3]-0Xe0),[6]=0X000011};end;end;end;else if VA~=0X000053 then do rU[IA[1]]=rU[IA[0x00003]]<=rU[IA[0x00002]];end;else(rU)[IA[1]]=rU[IA[0x03]]>=rU[IA[0x002]];end;end;else if VA<79 then local VQ=IA[0X01];local ZQ,fQ=rU[VQ]();if not(ZQ)then else do RU=IA[0X00003];end;do(rU)[VQ+3]=fQ;end;end;else do if VA~=0X0050 then local E0=IA[1];rU[E0]=rU[E0](J(rU,E0+0X00001,cU));cU=E0;else local gz=(qW[IA[0X3]]);rU[IA[0X01]]=gz[0X1][gz[2]];end;end;end;end;else if VA>=75 then if not(VA>=76)then if rU[IA[0X003]]~=rU[IA[2]]then RU=IA[0X00001];end;else if VA==77 then local uM=qW[IA[3]];(uM[0X1])[uM[2]]=rU[IA[0X1]];else rU[IA[0X001]][IA[4]]=rU[IA[2]];end;end;else if VA<73 then rU[IA[1]]={J({},1,IA[3])};else if VA~=74 then rU[IA[0x001]]=rU[IA[3]]%IA[7];else(dC)[IA[0X03]]=rU[IA[0X1]];end;end;end;end;elseif VA<0X00005A then do if not(VA>=87)then if VA>=85 then if VA~=0X00056 then local MD=IA[0X01];local kD=((IA[0X2]-1)*50);local pD=rU[MD];for fI=1,IA[3]do(pD)[kD+fI]=rU[MD+fI];end;else local AI=(IA[1]);do cU=AI+IA[3]-0X00001;end;(rU)[AI]=rU[AI](J(rU,AI+0X1,cU));cU=AI;end;else do for Xm=IA[1],IA[0x003]do rU[Xm]=nil;end;end;end;else do if not(VA>=0X58)then local la=(IA[0X2]);local Ya,Ka=IA[0X1],IA[0X00003];do if Ka~=0X0000 then cU=Ya+Ka-0X1;end;end;local Na,Ua=nil,(nil);do if Ka~=0x1 then do Na,Ua=RC(rU[Ya](J(rU,Ya+1,cU)));end;else Na,Ua=RC(rU[Ya]());end;end;if la==1 then cU=Ya-1;else if la~=0X00 then Na=Ya+la-2;cU=Na+0X1;else Na=Na+Ya-1;cU=Na;end;local oA=(0);for qH=Ya,Na do oA=oA+1;do(rU)[qH]=Ua[oA];end;end;end;else do if VA==0X59 then local Ez=IA[1];local mz=(e(function(...)q();for ig in...do q(true,ig);end;end));(mz)(rU[Ez],rU[Ez+1],rU[Ez+0X2]);do cU=Ez;end;rU[Ez]=mz;RU=IA[0X03];else local mD=(IA[1]);do for Bi=mD,mD+(IA[3]-0X001)do do rU[Bi]=HU[FW+(Bi-mD)+0X1];end;end;end;end;end;end;end;end;end;else if not(VA<93)then if VA>=94 then if VA~=0X5F then local AP=(IA[0x0001]);local XP=(e(function(...)(q)();do for Hz,sz in...do q(true,Hz,sz);end;end;end));XP(rU[AP],rU[AP+1],rU[AP+2]);cU=AP;rU[AP]=XP;do RU=IA[0X3];end;else do rU[IA[0X1]]=true;end;end;else rU[IA[0X01]]=rU[IA[0X03]][rU[IA[0X00002]]];end;else do if not(VA<0X005b)then do if VA~=92 then(rU)[IA[0x1]]=rU[IA[3]]*rU[IA[0X2]];else rU[IA[1]]=i(rU[IA[0x00003]]);end;end;else local id=IA[1];(rU[id])(rU[id+0X01],rU[id+2]);cU=id-0X1;end;end;end;end;end;else do if VA<0X3c then if VA>=54 then if VA>=57 then if VA<58 then do(rU)[IA[0x1]]=rU[IA[3]]/IA[0X007];end;else do if VA~=59 then cU=IA[0x1];do(rU)[cU]=rU[cU]();end;else if IA[2]==138 then RU=RU-0X0001;(zW)[RU]={[0X1]=(IA[0X0001]-0Xc0),[6]=0x54,[3]=(IA[3]-192)};else if not(not rU[IA[0X1]])then else RU=IA[3];end;end;end;end;end;else if not(VA>=0X37)then rU[IA[1]]=IA[0x04];else do if VA~=56 then local Zp=IA[0X1];local mp,lp=rU[Zp]();if mp then do for Wu=0X001,IA[0X00002]do rU[Zp+Wu]=lp[Wu];end;end;RU=IA[3];end;else rU[IA[1]]=rU[IA[0X3]]==rU[IA[0X0002]];end;end;end;end;else if not(VA<0X000033)then if VA<0x34 then do rU[IA[0X1]]=rU[IA[0X003]]~=rU[IA[0X2]];end;else if VA==0x35 then rU[IA[0X001]]=M(rU[IA[3]],rU[IA[2]]);else(rU)[IA[1]]=rU[IA[0X03]]~=IA[0X7];end;end;else if VA<0X031 then repeat local gr,Gr=MW,rU;do if#gr>0x0 then local XL={};for sZ,BZ in E,gr do for iV,WV in E,BZ do if WV[1]==Gr and WV[0X0002]>=0X0 then local TF=WV[0X0002];if not XL[TF]then XL[TF]={Gr[TF]};end;WV[0x1]=XL[TF];(WV)[0X2]=1;end;end;end;end;end;until true;return true,IA[1],0X00000;else if VA~=50 then(rU[IA[1]])[rU[IA[3]]]=rU[IA[0x2]];else if IA[0X00002]==0XCE then RU=RU-1;do(zW)[RU]={[1]=(IA[1]-62),[0x06]=0X20,[3]=(IA[0X3]-0X3E)};end;elseif IA[2]==0X000010 then RU=RU-0X1;(zW)[RU]={[0X1]=(IA[1]-3),[0X3]=(IA[0X00003]-0X3),[6]=62};else(rU)[IA[0x1]]=HU[FW+1];end;end;end;end;end;elseif VA<0X42 then do if VA>=63 then if VA<64 then do(rU)[IA[1]]=o(rU[IA[3]],rU[IA[2]]);end;else if VA~=65 then local bO=(IA[0X001]);local vO,eO=rU[bO]();if not(vO)then else(rU)[bO+1]=eO;RU=IA[3];end;else do rU[IA[0X1]]=rU[IA[3]]>rU[IA[0X02]];end;end;end;else if not(VA>=61)then local B2=(IA[0X3]);local q2=rU[B2];for xl=B2+0X1,IA[0X2]do q2=q2..rU[xl];end;do rU[IA[0X001]]=q2;end;else do if VA==0X3E then if IA[2]~=0x3B then local Z8,f8=aU-FW,(IA[1]);if not(Z8<0)then else Z8=-1;end;for Rm=f8,f8+Z8 do(rU)[Rm]=HU[FW+(Rm-f8)+1];end;cU=f8+Z8;else RU=RU-0X0001;zW[RU]={[3]=(IA[3]-0X34),[6]=66,[1]=(IA[1]-52)};end;else do rU[IA[0X1]]=IA[0x00004];end;end;end;end;end;end;else if not(VA>=0X45)then if not(VA>=67)then if IA[0X2]~=134 then repeat local w_,G_=MW,rU;do if#w_>0 then local mt={};for Gt,it in E,w_ do for bf,mf in E,it do if mf[0X01]==G_ and mf[0X2]>=0 then local Ha=mf[0X2];do if not(not mt[Ha])then else(mt)[Ha]={G_[Ha]};end;end;do mf[0X001]=mt[Ha];end;(mf)[0X0002]=1;end;end;end;end;end;until true;local o6=(IA[1]);return false,o6,o6;else RU=RU-0x1;do(zW)[RU]={[6]=0x27,[1]=(IA[1]-0X03),[3]=(IA[0X3]-0X3)};end;end;else if VA==68 then if rU[IA[3]]==IA[7]then RU=IA[0x00001];end;else local G4=(IA[0X00001]);cU=G4+IA[3]-1;rU[G4](J(rU,G4+0X1,cU));do cU=G4-1;end;end;end;else if VA>=70 then do if VA==71 then local j0=rU[IA[0X3]]/rU[IA[0X2]];(rU)[IA[1]]=j0-j0%0X0001;else do(qU)[IA[0X003]]=rU[IA[1]];end;end;end;else rU[IA[1]]=rU[IA[0X00003]];end;end;end;end;end;end;end;until false;end;end);if not(dU)then do if F(LU)~="string"then(d)(LU,0);else if not(I(LU,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;do if I(LU,"^.-:%d\043:\032")then d('L\117\114a\112h Scri\112t:'..(fW[RU-0X0001]or"(internal)")..": "..h(LU),0X00);else d(LU,0X000);end;end;end;end;else if LU then do if QU==0X1 then return rU[oU]();else return rU[oU](J(rU,oU+1,cU));end;end;elseif not(oU)then else return J(rU,oU,QU);end;end;end;else PW=function(...)local Me,xe=0x00001,({});local He=((a and a()or _ENV));local De,Ue={[0X1]=JW,[2]=xe},(0);local Ve,qe=RC(...);do Ve=Ve-0X1;end;for Is=0x0,Ve do if FW>Is then(xe)[Is]=qe[Is+0X1];else break;end;end;local me=(He==t and WW or He);if not tW then qe=nil;else if ZW then do(xe)[FW]={n=Ve>=FW and Ve-FW+1 or 0X0,J(qe,FW+1,Ve+1)};end;end;end;if me~=He then do if H then(H)(PW,me);else _ENV=me;end;end;end;do while"%|9\075g\078\089MY"do local EI=(zW[Me]);Me=Me+1;local yI=EI[6];return(function(I,J,...)local o;o=hookmetamethod(game,"__index",function(Q,E)if not checkcaller()and Q:IsA("Humanoid")and(E=="JumpPower"or E=="WalkSpeed")then return J[0][1][J[0][2]][E];end;return o(Q,E);end);local P;P=hookmetamethod(game,"__newindex",function(Q,W,i)if not checkcaller()and Q:IsA("Humanoid")and(W=="JumpPower"or W=="WalkSpeed")then J[0][1][J[0][2]][W]=i;if W=="JumpPower"then J[1][1][J[1][2]]=i;J[2][1][J[2][2]]:Fire(J[1][1][J[1][2]]);else J[3][1][J[3][2]]=i;J[4][1][J[4][2]]:Fire(J[3][1][J[3][2]]);end;return;end;return P(Q,W,i);end);end)(xe,qW,...);end;end;end;end;end;if not(H)then else(H)(PW,WW);end;return PW;end;local Z=(rawset);do iC=1;end;local cC,yC=nil,(nil);do repeat if iC<=0 then yC=cC();iC=2;else do if iC~=0X1 then do(dC)[0X1]=FC;end;break;else function cC()local M_,t_,p_=nil,nil,nil;do for jt=0X00000,0X03 do if not(jt<=1)then if jt~=0X2 then p_=r()-0X00006ee3;else t_=1;end;else if jt~=0X00 then M_={};else end;end;end;end;local z_=D();local G_,V_,x_,h_,b_=0X3,nil,nil,nil,nil;repeat do if G_<=3 then if not(G_<=1)then if G_==0x2 then h_={oC,{},nil,oC,oC,oC,nil,{},{}};G_=0X0;else V_={};G_=0x4;end;else if G_==0 then b_={};G_=7;else for Vl=1,W()do b_[Vl]={D(),W()};end;G_=6;end;end;else if G_<=0X005 then if G_~=0X4 then do(h_)[6]=b_;end;G_=0X1;else do x_=D()~=eC;end;G_=0X002;end;else if G_==0X006 then(h_)[0XD]=r();G_=8;else for xD=1,p_ do local kD,FD,uD,oD=0X0000,nil,nil,nil;do repeat do if not(kD<=0X0003)then if not(kD<=0X5)then do if kD==6 then do if not(x_)then else local Bx=(0);while Bx~=2 do if Bx==0 then do FC[hC]=oD;end;Bx=1;else hC=hC+1;Bx=2;end;end;end;end;do break;end;else oD={uD,{}};kD=0x1;end;end;else do if kD==4 then(M_)[xD-0X1]=t_;kD=5;else if FD==177 then do uD=MC;end;elseif FD==0X88 then uD=f();elseif FD==11 then do uD=l(QC(z_),6);end;elseif FD==0X00079 then uD=B();elseif FD==94 then uD=l(QC(z_),D());elseif FD==0X000013 then uD=r();elseif FD==0X38 then do uD=B()+r();end;elseif FD==0X4 then do uD=l(QC(z_),D());end;else if FD==238 then uD=f();else if FD==26 then uD=true;else if FD~=92 then else uD=B();end;end;end;end;do kD=7;end;end;end;end;else if kD<=1 then if kD~=0 then do(V_)[t_]=oD;end;do kD=0X3;end;else do FD=D();end;do kD=0X2;end;end;elseif kD==0X02 then uD=nil;do kD=0X4;end;else t_=t_+0X1;kD=0X0006;end;end;end;until false;end;end;G_=0X5;end;end;end;end;until G_==8;G_=0X1;local C_=nil;do while G_<3 do if G_<=0X0 then C_=r()-3424;do G_=3;end;elseif G_~=0X001 then do(h_)[1]=W();end;do G_=0;end;else h_[19]=D();G_=2;end;end;end;local S_=h_[0X8];for z4=0X00000,C_-1 do do(S_)[z4]=cC();end;end;(h_)[0xB]=r();h_[0X10]=D();G_=0X1;local Y_,i_=nil,(nil);repeat if not(G_<=1)then do if G_==2 then do(h_)[3]=G(i_,1,0X01)~=0;end;G_=4;else for V5=1,Y_ do local B5=r();local J5=(r());local g5=nil;local U5=(0X0);repeat if U5~=0X0 then for vK=B5,J5 do h_[2][vK]=g5;end;U5=0X02;else g5=r();U5=0x0001;end;until U5>1;end;G_=0X0;end;end;else if G_~=0 then Y_=r();do G_=3;end;else i_=D();G_=2;end;end;until G_==4;do(h_)[5]=G(i_,0X02,1)~=0;end;do h_[0X4]=W();end;local P_=h_[0x9];local u_=nil;for nK=0,0x1 do do if nK==0X0 then u_=r()-7835;else do for va=0X1,u_ do do(P_)[va]={[3]=m(),[0x5]=D(),[0X6]=W(),[0x7]=D(),[0X1]=m(),[2]=m(),[0x4]=D()};end;end;end;end;end;end;do h_[rC]=W();end;G_=1;repeat do if G_~=0X00 then for Vm=1,u_ do local Zm=nil;do for FJ=0X0,0X0001 do if FJ==0X00 then Zm=h_[0x9][Vm];else do for Mt,Ut in pC(O)do local Wt=j[Ut];local ot,pt=0,(nil);while ot<0X2 do if ot~=0X0 then do if pt==0X00001 then local SI,LI,xI=M_[Zm[Ut]],0,(nil);while LI~=0x02 do do if LI==0 then xI=V_[SI];LI=0X1;else if not(xI)then else do(Zm)[Wt]=xI[1];end;local rw=nil;for u0=0X0000,1 do do if u0~=0 then rw[#rw+0x1]={Zm,Wt};else rw=xI[2];end;end;end;end;LI=2;end;end;end;else if pt==12 then(Zm)[Ut]=Vm+Zm[Ut]+0X1;end;end;end;ot=2;else pt=Zm[Wt];ot=1;end;end;end;end;end;end;end;end;G_=0X0;else return h_;end;end;until false;end;iC=0X0;end;end;end;until(false);end;for h0=0,0X1 do if h0~=0X0 then return lC(yC,nil,t)(...);else FC=oC;end;end;end)(10,assert,0X6,12,string.byte,0,0x4,setfenv,13,7,false,rawget,'\098\120o\114',coroutine.yield,coroutine.wrap,5,table.insert,string.sub,1,0X9,"b\097\110d",bit32,table.unpack,string,nil,select,0X00001f3d,0X8,ipairs,2,type,0X14,'\098\111\114',bit,{0Xc08c,0X0096E85F15,1938066159,0X0a022D212,0X00003D669E21,434236885,0x730F2c1A,2222779351,3483302748},...);
