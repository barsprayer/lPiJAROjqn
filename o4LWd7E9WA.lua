-- This file was generated using Luraph Obfuscator v13.5.8

return(function(ld,hd,Fd,Bd,fd,dd,Md,bd,Rd,Ld,od,gd,Pd,Hd,td,cd,sd,Zd,Od,qd,Gd,Ud,nd,Kd,Jd,Cd,Qd,pd,vd,md,yd,Yd,xd,VP,Ad,kd,Ed,ed,ad,wd,id,rd,V,...)local N,X,k,G=nil,nil,nil,(nil);local zP=0x3;while zP<4 do if zP<=0X1 then if zP~=0 then G=xd;zP=4;else k=Jd;zP=1;end;else do if zP~=0X2 then N=kd;zP=2;else X=Gd;zP=0;end;end;end;end;local Q,S=Kd,tostring;local a=(getfenv);local u=(string.sub);local I,D,J,K=Od,tonumber,nil,nil;for Dl=0X0,0X1 do if Dl==0 then J=Yd.match;else do K=Ld;end;end;end;local Y,O=od,rawget;zP=1;local o,j=nil,nil;while zP<=1 do if zP~=0X00 then o=coroutine.wrap;zP=0;else j=string.byte;zP=0x0002;end;end;local i=unpack or cd;zP=0X1;local d=(nil);do repeat do if zP==0X0 then zP=2;else ddo zP=0;end;end;end;until zP==0X02;end;local g,L,b,C,M,Wd,r,R,t,U,W,B,s,l,h=nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil;local c=(coroutine.yield);local x=(id);for je=0,0X11 do do if not(je<=0X00008)then if je<=0X0c then if je<=10 then if je~=9 then do t=0x80000000;end;else R=function()local hg=(j(d,b,b));do for Wk=0,1 do if Wk==0 then b=b+1;else return hg;end;end;end;end;end;else do if je~=11 then W=Rd;else U=Cd^0X34;end;end;end;else if not(je<=14)then if je<=0X0f then l=t-1;else if je~=0X10 then h={[0]={[0]=0X0,1,0x2,sd,4,5,0x6,0X7,0x0008,0X9,nd,td,12,13,14,0Xf},{[Md]=0X00001,0X00,3,0X2,5,0X004,Ud,rd,9,8,11,10,0X0000d,12,0xf,ld},{[0X0]=2,sd,0,0X1,6,0X7,0X4,0X00005,0Xa,11,0X008,0X9,14,0Xf,12,Bd},{[0]=3,2,1,0,0x7,0x00006,5,0x4,11,10,0x0009,8,15,0Xe,13,12},{[0]=vd,qd,6,0X00007,0,1,0X002,0x3,0Xc,0X0d,14,15,8,9,10,0X00b},{[0]=5,4,7,0X06,0X1,0X00000,3,0X2,0X0000d,0Xc,0X000F,0Xe,9,0x08,11,0xA},{[0X0]=6,7,4,0X5,Cd,0X3,0,1,14,15,pd,0X0d,0Xa,11,8,0x9},{[0X0000]=0X00007,6,5,0x4,3,0X002,1,0X00000,15,0xe,Bd,0X0C,11,10,0X0009,8},{[0x0]=0x00008,9,10,0X0000b,pd,13,0XE,15,0X0,1,0X2,3,0x4,0x5,0X06,7},{[0X000]=0X9,0X8,11,10,0x0D,12,0XF,0X0E,1,0X0,3,0x2,0X00005,0X4,7,0X6},{[0X00]=0X0000a,td,hd,9,0Xe,0xF,0x0000C,13,0X2,3,0,1,6,7,vd,0x5},{[0X000]=11,0X00a,9,8,ed,0xe,Bd,0xc,0X00003,0X2,1,0,7,0x06,0x5,4},{[0X0]=12,13,14,0x00f,hd,0X09,0x0000A,td,4,0X05,0X6,7,0X0,0x1,2,0x0003},{[0X0]=13,0XC,15,0XE,9,8,11,10,5,vd,7,rd,0X1,0,3,Cd},{[0X000]=14,15,12,13,nd,0X00b,0X8,9,0X6,0X00007,4,0x05,2,0X3,0X0,0X1},{[0X0]=0XF,14,0x0000D,pd,0Xb,nd,Ad,8,7,6,0X5,4,0X0003,2,1,0}};else do local JD=nil;do for iI=0X0,1 do do if iI~=0 then for BR=0X1,31 do local cR=(0);while cR<0X2 do do if cR==0 then B[BR]=JD;do cR=0X001;end;else JD=JD*2;cR=2;end;end;end;end;else JD=2;end;end;end;end;end;end;end;else if je~=13 then s=function()local yf,wf,Mf,mf,Lf=0,nil,nil,nil,(nil);do while(true)do if yf==0 then wf,Mf,mf,Lf=j(d,b,b+0X3);do yf=1;end;else b=b+4;break;end;end;end;return Lf*16777216+mf*0X10000+Mf*256+wf;end;else B={[0]=0X1};end;end;end;else if not(je<=3)then if je<=0X005 then if je~=0x4 then M=0X100000000;else end;else if not(je<=0X6)then do if je==7 then d=G(u(d,0X5),"..",function(tP)if j(tP,2)~=gd then local nx=(I(D(tP,0X0010)));do if C then local Yj,bj=2,nil;while(true)do if not(Yj<=0)then if Yj~=1 then bj=k(nx,C);do Yj=0;end;else return bj;end;else C=dd;Yj=0X1;end;end;else return nx;end;end;else C=D(u(tP,1,0X00001));return bd;end;end);else do r=M-1;end;end;end;else Wd={};end;end;else if je<=1 then if je~=0x0 then L=ad;else g=(a and a()or Qd);end;else if je==2 then else do b=1;end;end;end;end;end;end;end;local e=(bit or Zd);do zP=1;end;local v,q,p,T=nil,nil,nil,(nil);while zP<4 do if not(zP<=0X1)then do if zP~=2 then q=function()local SP,jP,JP=0X0,nil,(nil);do while true do do if not(SP<=0)then if SP~=1 then do if JP>=t then JP=JP-M;end;end;SP=1;else return JP*M+jP;end;else jP,JP=s(),s();SP=0X2;end;end;end;end;end;do zP=0;end;else T=wd;zP=4;end;end;else do if zP~=0 then v=function(T_,b_,J_)local R_,t_=0X001,(nil);repeat if R_<=0x0 then do t_=t_-t_%1;end;R_=0X2;else if R_==1 then t_=(T_/B[b_])%B[J_];do R_=0x0;end;else return t_;end;end;until false;end;do zP=0X3;end;else p=function()local Ae=(s());local me,Se,xe,de,ne=nil,nil,nil,nil,(nil);local Ee=(0X3);repeat do if Ee<=0x2 then if Ee<=0 then de=v(Se,20,0x0000b);Ee=2;else if Ee~=1 then ne=v(Se,0,0X14)*M+Ae;do Ee=0X6;end;else xe=(-1)^v(Se,0x1f,0X001);Ee=0X0;end;end;else if Ee<=4 then if Ee~=3 then if Ae==0X0 and Se==0X000 then return Md;end;Ee=1;else me=0X1;Ee=0x0005;end;else if Ee~=5 then if de==0 then if ne==0 then do return xe*0;end;else local Kg=(0X00);while Kg~=2 do if Kg~=0 then me=0;Kg=2;else de=0x1;Kg=0x1;end;end;end;elseif de==0X07FF then if ne~=0X0 then return xe*(1/Md);else return xe*(0x00/0x0);end;end;Ee=7;else Se=s();Ee=4;end;end;end;end;until Ee>6;return xe*(2^(de-0X003ff))*(ne/U+me);end;zP=0X002;end;end;end;end;local A=(e and e.bxor or function(mV,hV)do mV=mV%M;end;local dV=(nil);local bV=0;local gV=0X0000;while true do if gV<=1 then do if gV~=0 then while mV>0 and hV>0X0 do local xL,OL,oL=0X0003,nil,(nil);while xL~=0X6 do if not(xL<=2)then if not(xL<=0x3)then if xL==0X4 then mV=(mV-OL)/16;xL=5;else do hV=(hV-oL)/0X10;end;xL=0X1;end;else do OL=mV%16;end;do xL=2;end;end;else if xL<=0 then bV=bV+h[OL][oL]*dV;do xL=4;end;else do if xL~=0X1 then do oL=hV%16;end;xL=0;else dV=dV*0X10;xL=0X006;end;end;end;end;end;end;do gV=3;end;else hV=hV%M;do gV=2;end;end;end;else do if gV~=0x2 then return bV+mV*dV+hV*dV;else dV=0X1;do gV=1;end;end;end;end;end;end);local Z=e and e[fd]or function(pt,ot)pt=pt%M;ot=ot%M;return((pt+ot)-A(pt,ot))/2;end;local w=e and e.bor or function(xc,Mc)local Bc=2;while 1710087337 do do if not(Bc<=0)then if Bc==1 then return r-Z(r-xc,r-Mc);else xc=xc%M;do Bc=0X000;end;end;else Mc=Mc%M;Bc=0X1;end;end;end;end;local f=(e and e[Hd]or function(SS)return r-(SS%M);end);zP=2;local H,F=nil,(nil);while zP~=0x04 do if zP<=1 then if zP==0 then do H=H or function(VE,iE)do if not(iE>=32)then else return 0X0;end;end;if iE<0 then return F(VE,-iE);end;return(VE*B[iE])%M;end;end;zP=0x001;else F=F or function(oM,dM)local eM=nil;local gM=0;repeat do if gM<=0X1 then if gM~=0 then if dM<0X0 then return H(oM,-dM);end;gM=2;else if not(dM>=32)then else return 0;end;gM=1;end;else if gM~=2 then do return eM-eM%1;end;else eM=(oM%M/B[dM]);gM=3;end;end;end;until false;end;zP=4;end;else if zP==2 then H=e and e.lshift;do zP=0x3;end;else F=e and e.rshift;zP=0X0;end;end;end;zP=1;local P,Td=nil,(nil);while zP~=0x00002 do if zP~=0x0 then P={[0X3]=0X00006,[0x7]=0X8,[9]=0,[3]=5,[4]=0X1,[5]=6,[Fd]=0X1,[2]=7};zP=0X00000;else Td={};zP=0x2;end;end;local E,m,y=nil,nil,(nil);for cx=0X00,2 do if not(cx<=0X0)then do if cx==0X01 then m=function()local U5=(0X00000);local E5=(0X0000);repeat local Fa=(j(d,b,b));b=b+0X0001;U5=w(U5,H(Z(Fa,127),E5));if Z(Fa,128)==0X000 then return U5;end;E5=E5+7;until false;end;else y=function()local Bq,Xq=0X1,(nil);do repeat do if Bq<=0X0 then return Xq;else if Bq==0x1 then do Xq=m();end;Bq=2;else do if Xq>l then do return Xq-M;end;end;end;do Bq=0x0;end;end;end;end;until false;end;end;end;end;else do E={0X05,vd,2};end;end;end;local z=assert;local Vd=(R());local zd=R();local Nd=(function(bL)local vL=({j(d,b,b+0X0003)});local pL,UL,CL,ML=0X000,nil,nil,nil;while pL~=0X3 do if pL<=0X0000 then do UL=A(vL[0X00001],zd);end;pL=1;else do if pL~=1 then do ML=A(vL[0X3],zd);end;pL=3;else CL=A(vL[0X2],zd);pL=0x2;end;end;end;end;local hL=A(vL[0X04],zd);zd=(0xe9*zd+bL)%0x100;pL=0;do repeat if pL==0 then b=b+0X00004;pL=0x1;else return hL*0x0001000000+ML*0X10000+CL*Ed+UL;end;until false;end;end);local Xd=function(...)return N("\035",...),{...};end;local Sd,Dd,ud,jd,Id=nil,nil,nil,nil,(nil);do for IM=0X0,0X5 do if not(IM<=0x2)then if not(IM<=3)then if IM~=4 then Id=jd();else function jd()local sT,pT,yT,uT,FT=0x4,nil,nil,nil,(nil);repeat if not(sT<=1)then if not(sT<=2)then if sT~=3 then sT=0X0;else do uT={};end;sT=0X02;end;else FT={{},nil,{},dd,{},nil,nil,dd,nil};sT=5;end;else do if sT==0 then pT={};sT=0X1;else do yT=0X1;end;do sT=3;end;end;end;end;until sT>0X04;local mT=FT[1];local IT=(s()-Pd);for j7=1,IT do do(mT)[j7]={[0X0003]=m(),[0x4]=y(),[0X6]=R(),[1]=R(),[2]=y(),[7]=R(),[0X05]=y()};end;end;do sT=5;end;local CT,TT=nil,nil;while sT<7 do if not(sT<=0X00002)then if not(sT<=0X4)then do if sT~=5 then(FT)[8]=v(CT,0X2,0X1)~=0x0;sT=0X0;else CT=R();do sT=1;end;end;end;else do if sT~=3 then TT={};sT=3;else(FT)[4]=uT;sT=7;end;end;end;else if sT<=0 then FT[rd]=m();sT=0X0002;else do if sT==1 then FT[0x009]=v(CT,1,0X00001)~=0X0;sT=6;else FT[2]=m();do sT=4;end;end;end;end;end;end;for wa=0X01,m()do do uT[wa]={R(),m()};end;end;local wT=FT[sd];do sT=0X4;end;local vT,BT,GT=nil,nil,nil;repeat do if not(sT<=0X3)then do if not(sT<=5)then do if sT~=6 then FT[Ud]=m();sT=3;else BT=s()-6293;do sT=0X00000;end;end;end;elseif sT==4 then vT=s()-0X85b4;sT=2;else(FT)[12]=R();sT=0x7;end;end;else do if sT<=1 then if sT~=0X00 then FT[0Xd]=s();sT=5;else GT=R();sT=0X8;end;else if sT==2 then do for pD=Md,vT-1 do do(wT)[pD]=jd();end;end;end;sT=1;else FT[0X00011]=R();do sT=0X6;end;end;end;end;end;end;until sT>=0X8;do sT=0x1;end;local MT=nil;while 0x000011c974a3 do if sT==0 then for YJ=0X01,BT do local PJ,yJ,iJ,HJ=5,nil,nil,nil;while PJ<=0X5 do if not(PJ<=2)then do if PJ<=3 then do iJ=nil;end;PJ=2;else if PJ==0x4 then if yJ==60 then do iJ=q();end;elseif yJ==172 then iJ=true;else if yJ==152 then iJ=u(Dd(GT),R());elseif yJ==0X0A0 then iJ=q();elseif yJ==md then iJ=q();elseif yJ==27 then iJ=false;elseif yJ==190 then iJ=p();else if yJ==5 then iJ=u(Dd(GT),4);elseif yJ==yd then do iJ=p()+s();end;else if yJ==0X07a then iJ=u(Dd(GT),R());end;end;end;end;PJ=0X00000;else yJ=R();do PJ=3;end;end;end;end;else do if not(PJ<=0)then if PJ==0x0001 then(TT)[yT]=HJ;PJ=0X6;else do(pT)[YJ-0x1]=yT;end;do PJ=0X4;end;end;else do HJ={iJ,{}};end;PJ=1;end;end;end;end;PJ=0X0;while true do do if PJ==0 then yT=yT+1;do PJ=0X01;end;else if MT then(Wd)[Sd]=HJ;Sd=Sd+1;end;break;end;end;end;end;do break;end;else MT=R()~=0X0;sT=0;end;end;sT=0X1;local OT=nil;while sT<=0x3 do if sT<=0x1 then if sT~=0 then do for sh=0X001,IT do local Uh=FT[1][sh];for Iv,Uv in VP(E)do local Xv=(P[Uv]);local kv=(Uh[Xv]);if kv==0x6 then local P1=(nil);local U1=(pT[Uh[Uv]]);local M1=(0X00000);do repeat if M1~=0 then do if not(P1)then else Uh[Xv]=P1[1];local QC=(P1[2]);do QC[#QC+0X1]={Uh,Xv};end;end;end;do M1=2;end;else P1=TT[U1];M1=1;end;until M1>0X1;end;else if kv==0X000D then(Uh)[Uv]=sh+Uh[Uv]+1;end;end;end;end;end;sT=0X3;else do FT[0X0B]=s();end;sT=0X4;end;else if sT~=2 then do OT=s();end;sT=2;else for t4=Fd,OT do local o4,E4,e4,a4=0,nil,nil,(nil);while o4~=4 do if not(o4<=1)then if o4==0X02 then e4=s();o4=3;else do a4=s();end;o4=0x1;end;else do if o4~=0X0 then for q4=E4,e4 do FT[5][q4]=a4;end;o4=0x4;else do E4=s();end;o4=0x00002;end;end;end;end;end;sT=0;end;end;end;do return FT;end;end;end;else function ud(xo,Vo,Oo)local eo=(Oo[1]);local no,Io=Oo[3],Oo[0X07];local qo,vo,Ho,io=Oo[2],Oo[5],Oo[0x009],(Oo[8]);local Qo=(K({},{__mode="\118"}));local ho,yo=Oo[6],(nil);do if ho~=1 then yo=function(...)local Sv,lv=1,({});local av=((a and a()or _ENV));local Kv=({[0x1]=lv,[0X2]=Oo});local Vv,zv=Xd(...);Vv=Vv-1;for sg=0X0000,Vv do do if Io>sg then lv[sg]=zv[sg+0X1];else break;end;end;end;if not Ho then do zv=nil;end;else if io then lv[Io]={n=Vv>=Io and Vv-Io+0X1 or 0,i(zv,Io+0X00001,Vv+1)};end;end;local ov,Av=(av==g and Vo or av),0X0;if ov~=av then if Q then(Q)(yo,ov);else _ENV=ov;end;end;local Uv,Fv,Hv,sv=X(function()repeat local vZ=(eo[Sv]);local gZ=vZ[3];do Sv=Sv+1;end;if not(gZ<48)then if gZ>=72 then if gZ<84 then if gZ>=0X4E then do if gZ<81 then if gZ<0X4f then local D_=(no[vZ[0X00005]]);local v_=D_[4];local U_,A_=#v_,nil;if not(U_>0)then else do A_={};end;do for my=0X1,U_ do local gy=(v_[my]);if gy[1]==0X0 then(A_)[my-1]={lv,gy[2]};else A_[my-1]=xo[gy[2]];end;end;end;(x)(Qo,A_);end;(lv)[vZ[0X00002]]=ud(A_,ov,D_);else if gZ~=0x50 then lv[vZ[0X2]]=lv[vZ[0X5]][lv[vZ[0X04]]];else lv[vZ[2]]=lv[vZ[0x00005]]%vZ[1];end;end;else if not(gZ>=82)then if vZ[4]==141 then Sv=Sv-1;eo[Sv]={[0X003]=0X5d,[0X0005]=(vZ[5]-234),[0X2]=(vZ[2]-0xeA)};else(lv)[vZ[2]]=nil;end;else if gZ~=0X53 then local ab=vZ[0X002];local Ab,Kb,cb=lv[ab]();if not(Ab)then else do lv[ab+1]=Kb;end;(lv)[ab+0X2]=cb;Sv=vZ[5];end;else do if vZ[4]~=116 then repeat local mc,Rc,Hc=Qo,lv,vZ[2];if not(#mc>0X0)then else local Kq={};for i5,Q5 in L,mc do for IA,RA in L,Q5 do do if not(RA[0X1]==Rc and RA[0X0002]>=Hc)then else local J5=RA[0X2];do if not(not Kq[J5])then else(Kq)[J5]={Rc[J5]};end;end;RA[0X1]=Kq[J5];(RA)[2]=0x1;end;end;end;end;end;until true;else Sv=Sv-1;do eo[Sv]={[0X3]=0X0051,[0X2]=(vZ[0X02]-0x59),[5]=(vZ[5]-89)};end;end;end;end;end;end;end;elseif gZ<75 then if not(gZ>=0X49)then if not(not lv[vZ[0X2]])then else Sv=vZ[0x05];end;else if gZ==74 then do repeat local ww,rw=Qo,lv;do if not(#ww>0)then else local L3={};for QZ,aZ in L,ww do for bR,vR in L,aZ do if not(vR[1]==rw and vR[2]>=0)then else local FS=vR[2];if not(not L3[FS])then else L3[FS]={rw[FS]};end;(vR)[1]=L3[FS];vR[2]=1;end;end;end;end;end;until true;end;return true,vZ[2],0X0;else do(lv)[vZ[2]]=lv[vZ[0X00005]]~=vZ[0x1];end;end;end;else if not(gZ<76)then if gZ~=0x004d then local cY=(vZ[0X2]);lv[cY](i(lv,cY+0X1,Av));do Av=cY-1;end;else(lv)[vZ[2]]=w(lv[vZ[0X5]],lv[vZ[0x4]]);end;else do lv[vZ[2]]=f(lv[vZ[5]]);end;end;end;else do if not(gZ>=90)then if not(gZ>=87)then do if gZ<85 then local v5=vZ[2];lv[v5](lv[v5+1],lv[v5+0x2]);Av=v5-1;else if gZ~=0X56 then if not(lv[vZ[0X5]]<=vZ[1])then do Sv=vZ[0x2];end;end;else(lv)[vZ[2]]=lv[vZ[0X05]]==lv[vZ[0X00004]];end;end;end;else do if gZ<0X58 then local Mz=vZ[0X2];local qz=lv[vZ[5]];(lv)[Mz+1]=qz;(lv)[Mz]=qz[vZ[0X1]];else do if gZ==89 then local SA=(vZ[5]);local nA=lv[SA];for O1=SA+0X1,vZ[0X04]do nA=nA..lv[O1];end;do(lv)[vZ[0X002]]=nA;end;else local iN=(vZ[2]);Av=iN+vZ[5]-1;(lv[iN])(i(lv,iN+1,Av));Av=iN-0X1;end;end;end;end;end;elseif gZ>=0X0005d then if not(gZ>=94)then if vZ[4]==0XD9 then Sv=Sv-0X1;do(eo)[Sv]={[3]=0X23,[0X5]=(vZ[0x5]-0xc6),[2]=(vZ[0X002]-198)};end;elseif vZ[0x4]~=0X65 then do repeat local mt,Wt=Qo,(lv);if#mt>0X0 then local Rc={};do for KC,JC in L,mt do for Y3,S3 in L,JC do if not(S3[1]==Wt and S3[0x2]>=0)then else local M8=S3[0X2];if not Rc[M8]then(Rc)[M8]={Wt[M8]};end;(S3)[0X1]=Rc[M8];(S3)[0X002]=0X1;end;end;end;end;end;until true;end;return;else Sv=Sv-0X1;eo[Sv]={[0X2]=(vZ[2]-242),[0x5]=(vZ[5]-242),[3]=81};end;else if gZ==95 then local g7=(vZ[5]);local j7=vZ[2];Av=j7+g7-0X1;do repeat local mS,uS=Qo,(lv);if not(#mS>0X0)then else local Vg={};for pm,em in L,mS do do for rf,Zf in L,em do if not(Zf[0X00001]==uS and Zf[0X002]>=0)then else local B1=Zf[0X2];if not Vg[B1]then(Vg)[B1]={uS[B1]};end;Zf[0X0001]=Vg[B1];(Zf)[2]=1;end;end;end;end;end;until true;end;do return true,j7,g7;end;else if lv[vZ[5]]<lv[vZ[0X0004]]then Sv=vZ[2];end;end;end;else if gZ>=91 then if gZ==0X005C then do lv[vZ[2]]=lv[vZ[0x00005]]*lv[vZ[4]];end;else local de,oe=Vv-Io,(vZ[2]);if not(de<0X0)then else de=-1;end;for Y0=oe,oe+de do lv[Y0]=zv[Io+(Y0-oe)+0X001];end;do Av=oe+de;end;end;else if lv[vZ[5]]==vZ[0X1]then else do Sv=vZ[2];end;end;end;end;end;end;else if not(gZ>=60)then if gZ<0X036 then if not(gZ<0X33)then if not(gZ<0x034)then do if gZ==0x00035 then(lv[vZ[2]])[lv[vZ[0X00005]]]=vZ[1];else(lv)[vZ[2]]=lv[vZ[0X005]]<=lv[vZ[4]];end;end;else local zT=(vZ[5]);(lv)[vZ[2]]=lv[zT]..lv[zT+0X01];end;else do if not(gZ>=0X31)then local Tm=vZ[0X002];lv[Tm]=lv[Tm](i(lv,Tm+0X1,Av));do Av=Tm;end;else if gZ~=50 then lv[vZ[2]]=vZ[0x0006];else lv[vZ[2]]=Td[vZ[0x5]];end;end;end;end;else if not(gZ<57)then if gZ<58 then(lv)[vZ[2]]=lv[vZ[0X5]][vZ[0X00001]];else if gZ~=0X3b then do lv[vZ[2]]=ov[vZ[0X6]];end;else lv[vZ[2]]=lv[vZ[5]]<lv[vZ[4]];end;end;elseif gZ>=0x37 then if gZ~=56 then local uX=xo[vZ[5]];(lv)[vZ[0x2]]=uX[0X0001][uX[0X2]];else do(lv[vZ[0X00002]])[vZ[6]]=vZ[1];end;end;else local Qy=vZ[0X00002];local Ay,iy=lv[Qy]();if not(Ay)then else Sv=vZ[5];lv[Qy+3]=iy;end;end;end;else do if gZ>=0x42 then do if not(gZ>=0X45)then if gZ<67 then local zo=(vZ[0X2]);(lv[zo])(lv[zo+1]);do Av=zo-1;end;else if gZ==68 then lv[vZ[2]]={};else local np=(vZ[0X2]);local Rp,Dp=lv[np]();do if Rp then lv[np+1]=Dp;do Sv=vZ[0X5];end;end;end;end;end;else do if gZ>=0X46 then if gZ==71 then ov[vZ[6]]=lv[vZ[0X02]];else local Np,ap=vZ[2],((vZ[0X4]-0X1)*50);local Dp=(lv[Np]);do for fs=0X00001,Av-Np do Dp[ap+fs]=lv[Np+fs];end;end;end;else local hk=vZ[2];local Uk,Yk=lv[hk]();if Uk then for k3=0x00001,vZ[4]do(lv)[hk+k3]=Yk[k3];end;Sv=vZ[5];end;end;end;end;end;else if gZ<63 then if not(gZ<0X03D)then if gZ==0X3e then Av=vZ[0X2];do lv[Av]=lv[Av]();end;else if vZ[0X4]~=208 then if lv[vZ[0x2]]then Sv=vZ[5];end;else Sv=Sv-1;do(eo)[Sv]={[0X003]=45,[2]=(vZ[0X2]-229),[5]=(vZ[5]-0XE5)};end;end;end;else local Ov=vZ[2];local hv=((vZ[0x004]-1)*0X32);local Bv=(lv[Ov]);for Ep=0X001,vZ[5]do(Bv)[hv+Ep]=lv[Ov+Ep];end;end;else if gZ<64 then do if not(not(lv[vZ[0X5]]<=lv[vZ[4]]))then else Sv=vZ[0x2];end;end;else do if gZ~=65 then do(lv[vZ[0x2]])[lv[vZ[5]]]=lv[vZ[0X4]];end;else local W1=vZ[2];local H1=(o(function(...)c();for pO,RO in...do c(true,pO,RO);end;end));(H1)(lv[W1],lv[W1+0x00001],lv[W1+2]);do Av=W1;end;(lv)[W1]=H1;Sv=vZ[5];end;end;end;end;end;end;end;end;else do if gZ<0X18 then do if not(gZ<0XC)then do if gZ>=18 then do if gZ<21 then if not(gZ>=0X13)then(lv)[vZ[2]]=lv[vZ[5]]+lv[vZ[4]];else do if gZ~=20 then do repeat local GH,hH=Qo,(lv);if not(#GH>0X0)then else local zn=({});for rR,yR in L,GH do do for E5,t5 in L,yR do if not(t5[0X001]==hH and t5[2]>=0x000)then else local n1=(t5[2]);if not(not zn[n1])then else zn[n1]={hH[n1]};end;(t5)[0X1]=zn[n1];(t5)[0X2]=0X1;end;end;end;end;end;until true;end;local XP=vZ[2];do return false,XP,XP;end;else do(lv)[vZ[2]]=lv[vZ[5]]/lv[vZ[0X4]];end;end;end;end;else do if not(gZ>=0x016)then local d_=(vZ[2]);local J_,C_,v_=lv[d_],lv[d_+1],lv[d_+2];(lv)[d_]=o(function()do for Hq=J_,C_,v_ do c(true,Hq);end;end;end);Sv=vZ[0X5];else if gZ==0X017 then lv[vZ[0X2]]=lv[vZ[5]]~=lv[vZ[0X4]];else do lv[vZ[0X2]]={i({},1,vZ[0x5])};end;end;end;end;end;end;else if gZ<0xf then if gZ<13 then(lv)[vZ[2]]=F(lv[vZ[0X5]],lv[vZ[0x04]]);else if gZ~=14 then do Av=vZ[0X2];end;lv[Av]();Av=Av-0x1;else if lv[vZ[0X05]]~=lv[vZ[4]]then Sv=vZ[0X2];end;end;end;else do if gZ>=16 then do if gZ==17 then lv[vZ[2]]=vZ[6];else lv[vZ[0X002]][vZ[0X6]]=lv[vZ[0X004]];end;end;else(lv)[vZ[0X002]]=A(lv[vZ[0X5]],lv[vZ[0X4]]);end;end;end;end;end;else if not(gZ<6)then if gZ>=9 then if not(gZ<0x000a)then if gZ==11 then lv[vZ[0X2]]=Z(lv[vZ[0x5]],lv[vZ[0x04]]);else local pC=vZ[0X00002];local iC=o(function(...)(c)();for WG in...do c(true,WG);end;end);(iC)(lv[pC],lv[pC+1],lv[pC+2]);Av=pC;(lv)[pC]=iC;do Sv=vZ[0X0005];end;end;else if vZ[0X4]==203 then Sv=Sv-1;eo[Sv]={[0X5]=(vZ[5]-4),[3]=0X2B,[0X2]=(vZ[2]-4)};else(lv)[vZ[0X2]]=-lv[vZ[0X00005]];end;end;else if gZ>=0X07 then do if gZ==8 then lv[vZ[2]]=true;else do(lv)[vZ[2]]=H(lv[vZ[0X5]],lv[vZ[0X04]]);end;end;end;else if vZ[4]==0X007 then do Sv=Sv-1;end;do eo[Sv]={[5]=(vZ[5]-68),[0x2]=(vZ[2]-68),[0X00003]=91};end;elseif vZ[0X4]==0X00084 then Sv=Sv-1;eo[Sv]={[0X5]=(vZ[5]-0Xd4),[3]=91,[2]=(vZ[0X2]-0xd4)};else repeat local b8,i8=Qo,(lv);do if not(#b8>0X0)then else local kv={};for B3,b3 in L,b8 do for vq,Iq in L,b3 do if not(Iq[1]==i8 and Iq[2]>=0x00000)then else local tZ=(Iq[0X02]);do if not(not kv[tZ])then else kv[tZ]={i8[tZ]};end;end;do(Iq)[1]=kv[tZ];end;Iq[2]=1;end;end;end;end;end;until true;local WZ=(vZ[2]);do return false,WZ,WZ+vZ[0X5]-2;end;end;end;end;else if not(gZ<3)then if not(gZ>=0X00004)then(lv)[vZ[0X02]]=false;else if gZ~=5 then do repeat local e2,P2=Qo,lv;if#e2>0X0 then local CO=({});for yR,LR in L,e2 do for q5,S5 in L,LR do if not(S5[0X00001]==P2 and S5[2]>=0)then else local hc=S5[2];if not(not CO[hc])then else do CO[hc]={P2[hc]};end;end;S5[1]=CO[hc];(S5)[2]=1;end;end;end;end;until true;end;return true,vZ[0x2],0X01;else local rr=(vZ[0X2]);local ar=o(function(...)c();do for ux,ax,Ex,ex,Dx,sx,Bx,Ax,dx,kx in...do(c)(true,{ux,ax,Ex,ex,Dx,sx,Bx,Ax,dx,kx});end;end;end);ar(lv[rr],lv[rr+0X1],lv[rr+2]);Av=rr;do(lv)[rr]=ar;end;Sv=vZ[5];end;end;else if not(gZ>=0x1)then local Qc=vZ[0X2];do(lv)[Qc]=lv[Qc](lv[Qc+1]);end;Av=Qc;else if gZ~=0X002 then do if lv[vZ[5]]==lv[vZ[0X4]]then Sv=vZ[2];end;end;else local BO=(lv[vZ[0X0005]]/lv[vZ[0X004]]);do lv[vZ[0X2]]=BO-BO%1;end;end;end;end;end;end;end;else if not(gZ>=36)then if not(gZ>=30)then if gZ>=27 then if not(gZ>=0x1C)then lv[vZ[2]]=lv[vZ[0x00005]]-lv[vZ[4]];else if gZ~=29 then Sv=vZ[0X00005];else do lv[vZ[0X2]]=lv[vZ[0x00005]]/vZ[1];end;end;end;else if gZ>=0X19 then if gZ==26 then if lv[vZ[0X5]]<=lv[vZ[0X4]]then do Sv=vZ[2];end;end;else lv[vZ[2]]=lv[vZ[5]]>lv[vZ[4]];end;else do if lv[vZ[0X5]]==vZ[0X1]then Sv=vZ[2];end;end;end;end;else if gZ<0X21 then if not(gZ<31)then if gZ~=32 then if not(not(lv[vZ[5]]<lv[vZ[0X4]]))then else Sv=vZ[0x2];end;else lv[vZ[2]]=Kv[vZ[0x5]];end;else(lv)[vZ[2]]=lv[vZ[0X5]]%lv[vZ[4]];end;else if gZ<34 then local Nx=xo[vZ[5]];(Nx[0X0001])[Nx[0x2]]=lv[vZ[2]];else if gZ==35 then if vZ[0X0004]==0X058 then do Sv=Sv-0X00001;end;do eo[Sv]={[0X2]=(vZ[2]-171),[0X00005]=(vZ[5]-0XAB),[0X0003]=43};end;elseif vZ[0x00004]==0XE0 then do Sv=Sv-0X00001;end;do eo[Sv]={[2]=(vZ[0X002]-0Xe6),[0X005]=(vZ[0X5]-0XE6),[3]=6};end;else do for ig=vZ[2],vZ[5]do lv[ig]=nil;end;end;end;else do lv[vZ[2]]=not lv[vZ[0X05]];end;end;end;end;end;else if gZ<42 then do if gZ<0X27 then if gZ>=0X25 then if gZ==38 then if vZ[4]==0X001E then Sv=Sv-0X1;(eo)[Sv]={[3]=0x23,[0X02]=(vZ[2]-0Xb5),[5]=(vZ[0X5]-181)};elseif vZ[0X04]~=0Xa2 then repeat local MR,yR=Qo,lv;if#MR>0 then local SZ={};for It,Zt in L,MR do for q8,Y8 in L,Zt do if not(Y8[1]==yR and Y8[0X002]>=0x0)then else local xp=(Y8[2]);if not SZ[xp]then do(SZ)[xp]={yR[xp]};end;end;(Y8)[0X1]=SZ[xp];do(Y8)[0x0002]=1;end;end;end;end;end;until true;return false,vZ[2],Av;else do Sv=Sv-0X1;end;(eo)[Sv]={[0X0005]=(vZ[5]-0XBC),[3]=0X0022,[2]=(vZ[0X2]-0X00Bc)};end;else do if vZ[4]~=0X0000da then local kU=vZ[0X002];for UK=kU,kU+(vZ[5]-1)do(lv)[UK]=zv[Io+(UK-kU)+0X1];end;else Sv=Sv-1;(eo)[Sv]={[0X0005]=(vZ[0X00005]-148),[0X3]=81,[0X2]=(vZ[0X2]-148)};end;end;end;else lv[vZ[2]]=lv[vZ[0X5]]>=lv[vZ[4]];end;else if not(gZ>=0X0028)then Kv[vZ[5]]=lv[vZ[0x2]];else if gZ~=0X29 then local Uo,Lo=vZ[2],vZ[5];if Lo==0X00000 then else Av=Uo+Lo-0X00001;end;local Po,oo,so=vZ[0X004],nil,(nil);if Lo==0X1 then do oo,so=Xd(lv[Uo]());end;else oo,so=Xd(lv[Uo](i(lv,Uo+1,Av)));end;if Po==0X00001 then do Av=Uo-0X1;end;else if Po~=0X0 then oo=Uo+Po-2;Av=oo+1;else do oo=oo+Uo-1;end;Av=oo;end;local QK=0;do for z4=Uo,oo do QK=QK+0X1;lv[z4]=so[QK];end;end;end;else(lv)[vZ[2]]=lv[vZ[0X5]]*vZ[0x1];end;end;end;end;else if not(gZ<0X2D)then if not(gZ<0X2e)then do if gZ~=0X0002F then lv[vZ[0X0002]]=lv[vZ[5]]^lv[vZ[0X4]];else local jH=vZ[2];lv[jH]=lv[jH](lv[jH+0X0001],lv[jH+0X2]);Av=jH;end;end;else do lv[vZ[2]]=#lv[vZ[5]];end;end;else if not(gZ<43)then if gZ==0X00002C then local iX=(vZ[2]);Av=iX+vZ[0X00005]-0X1;(lv)[iX]=lv[iX](i(lv,iX+0x1,Av));Av=iX;else if vZ[4]~=159 then do(lv)[vZ[0X2]]=lv[vZ[5]];end;else Sv=Sv-1;(eo)[Sv]={[5]=(vZ[0x5]-133),[0x2]=(vZ[2]-133),[0X3]=19};end;end;else(Td)[vZ[0x5]]=lv[vZ[2]];end;end;end;end;end;end;end;until false;end);if not(Uv)then do if W(Fv)=='strin\103'then if J(Fv,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if not(J(Fv,"^.-:%d+: "))then(T)(Fv,0X0);else(T)("\076u\114aph Sc\114ip\116\058"..(vo[Sv-1]or"\040i\110\116e\114n\097l\041")..": "..S(Fv),0);end;else(T)(Fv,0X00);end;end;elseif Fv then if sv==1 then do return lv[Hv]();end;else return lv[Hv](i(lv,Hv+0X1,Av));end;elseif not(Hv)then else return i(lv,Hv,sv);end;end;else yo=function(...)local xi=0X1;local ui=({});local Ei=(a and a()or _ENV);local Ri,Ii={[0x1]=ui,[0X2]=Oo},(Ei==g and Vo or Ei);local qi,gi=Xd(...);qi=qi-0X1;local Bi=(0);do for Po=0X00000,qi do if Io>Po then ui[Po]=gi[Po+1];else do break;end;end;end;end;if not Ho then gi=nil;else if io then(ui)[Io]={n=qi>=Io and qi-Io+0X1 or 0,i(gi,Io+0X01,qi+1)};end;end;if Ii~=Ei then if not(Q)then _ENV=Ii;else(Q)(yo,Ii);end;end;repeat local bY=eo[xi];local FY=bY[0X00003];xi=xi+1;return(function(j,l,...)local T;T=hookmetamethod(game,"__index",function(N,v)if not checkcaller()and N:IsA("Humanoid")and(v=="JumpPower"or v=="WalkSpeed")then return l[0][1][l[0][2]][v];end;return T(N,v);end);local h;h=hookmetamethod(game,"__newindex",function(y,z,H)if not checkcaller()and y:IsA("Humanoid")and(z=="JumpPower"or z=="WalkSpeed")then l[0][1][l[0][2]][z]=H;if z=="JumpPower"then l[1][1][l[1][2]]=H;l[2][1][l[2][2]]:Fire(l[1][1][l[1][2]]);else l[3][1][l[3][2]]=H;l[4][1][l[4][2]]:Fire(l[3][1][l[3][2]]);end;return;end;return h(y,z,H);end);end)(ui,xo,...);until false;end;end;end;if not(Q)then else(Q)(yo,Vo);end;return yo;end;end;else do if IM<=0X0 then Sd=0x1;else if IM~=0X1 then else Dd=function(lJ)local sJ,IJ=nil,(nil);local wJ=1;while wJ<=0X1 do if wJ~=0x000 then sJ=s();wJ=0;else IJ="";do wJ=0X2;end;end;end;for pV=1,sJ,0X1F3d do local SV,XV,QV=0X00001,nil,nil;while SV<=0X00002 do if SV<=0 then QV={j(d,b+pV-1,b+XV-0X001)};do SV=0X3;end;else if SV==0X1 then XV=pV+7997-1;SV=0X00002;else do if not(XV>sJ)then else XV=sJ;end;end;SV=0X0000;end;end;end;SV=0X1;while SV<=1 do if SV==0 then IJ=IJ..I(i(QV));SV=2;else for ea=1,#QV do local Na=1;do while Na<=1 do if Na~=0X00 then do QV[ea]=A(QV[ea],Vd);end;Na=0X00000;else do Vd=(lJ*Vd+0X61)%256;end;do Na=0X2;end;end;end;end;end;SV=0X00000;end;end;end;do wJ=1;end;while(true)do do if wJ==0X00 then return IJ;else b=b+sJ;wJ=0;end;end;end;end;end;end;end;end;end;end;(Td)[0X2]=Wd;Wd=nil;return ud(nil,g,Id)(...);end)(0X000e,8,1,13,'b\097\110d',nil,0X0,"",type,setmetatable,rawset,0X48,47182,"bno\116",11,table.unpack,0X0003,bit32,string.char,0X0005,pcall,0x0007,10,setfenv,string.rep,2,_ENV,0X0c,4,108,0X00F9,string,string.gsub,ipairs,9,select,0x100,0X000f,next,error,table.insert,6,{39345,0x6d61eDE9,3431018341,0x0b375F0a8,318632841,0x00047026b43,2611114894,0x000A6E75d40,0X000eb6Da7e4},...);
